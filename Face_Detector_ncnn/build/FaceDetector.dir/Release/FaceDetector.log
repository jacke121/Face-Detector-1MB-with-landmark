  main.cpp
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\malloc.h(45): warning C4820: “_heapinfo”:“4”字节填充添加在 数据成员“_heapinfo::_useflag”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vcruntime_exception.h(25): warning C4820: “__std_exception_data”:“7”字节填充添加在 数据成员“__std_exception_data::_DoFree”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vcruntime_typeinfo.h(44): warning C4820: “__std_type_info_data”:“7”字节填充添加在 数据成员“__std_type_info_data::_DecoratedName”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo.h(60): warning C4820: “_Collvec”:“4”字节填充添加在 数据成员“_Collvec::_Page”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo.h(66): warning C4820: “_Ctypevec”:“4”字节填充添加在 数据成员“_Ctypevec::_Page”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo.h(68): warning C4820: “_Ctypevec”:“4”字节填充添加在 数据成员“_Ctypevec::_Delfl”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(4183): warning C4820: “std::_Yarn<char>”:“7”字节填充添加在 数据成员“std::_Yarn<char>::_Nul”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo(228): note: 参见对正在编译的 类 模板 实例化 "std::_Yarn<char>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo(228): warning C4820: “std::_Locinfo”:“4”字节填充添加在 数据成员“std::_Locinfo::_Lock”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(4183): warning C4820: “std::_Yarn<wchar_t>”:“6”字节填充添加在 数据成员“std::_Yarn<wchar_t>::_Nul”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo(230): note: 参见对正在编译的 类 模板 实例化 "std::_Yarn<wchar_t>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(182): warning C4820: “std::locale::facet”:“4”字节填充添加在 数据成员“std::locale::facet::_Myrefs”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(247): warning C4820: “std::locale::_Locimp”:“3”字节填充添加在 数据成员“std::locale::_Locimp::_Xparent”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(488): warning C4820: “std::locale”:“7”字节填充添加在 基类“std::_Crt_new_delete”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(330): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(356): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(812): warning C4625: “std::codecvt_base”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(812): warning C4626: “std::codecvt_base”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1353): warning C4625: “std::codecvt<char16_t,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1353): warning C4626: “std::codecvt<char16_t,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1678): warning C4625: “std::codecvt<char32_t,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1678): warning C4626: “std::codecvt<char32_t,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1922): warning C4820: “std::codecvt<wchar_t,char,_Mbstatet>”:“4”字节填充添加在 数据成员“std::codecvt<wchar_t,char,_Mbstatet>::_Cvt”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1922): warning C4625: “std::codecvt<wchar_t,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1922): warning C4626: “std::codecvt<wchar_t,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2171): warning C4820: “std::codecvt<unsigned short,char,_Mbstatet>”:“4”字节填充添加在 数据成员“std::codecvt<unsigned short,char,_Mbstatet>::_Cvt”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2171): warning C4625: “std::codecvt<unsigned short,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2171): warning C4626: “std::codecvt<unsigned short,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2219): warning C4625: “std::ctype_base”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2219): warning C4626: “std::ctype_base”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2721): warning C4625: “std::ctype<char>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2721): warning C4626: “std::ctype<char>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2962): warning C4820: “std::ctype<wchar_t>”:“4”字节填充添加在 数据成员“std::ctype<wchar_t>::_Cvt”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2962): warning C4625: “std::ctype<wchar_t>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2962): warning C4626: “std::ctype<wchar_t>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3205): warning C4820: “std::ctype<unsigned short>”:“4”字节填充添加在 数据成员“std::ctype<unsigned short>::_Cvt”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3205): warning C4625: “std::ctype<unsigned short>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3205): warning C4626: “std::ctype<unsigned short>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3250): warning C4625: “std::ctype_byname<char>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3250): warning C4626: “std::ctype_byname<char>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(943): warning C4625: “std::codecvt<char,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3255): note: 参见对正在编译的 类 模板 实例化 "std::codecvt<char,char,_Mbstatet>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(943): warning C4626: “std::codecvt<char,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(192): warning C4820: “std::error_code”:“4”字节填充添加在 数据成员“std::error_code::_Myval”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(262): warning C4820: “std::error_condition”:“4”字节填充添加在 数据成员“std::error_condition::_Myval”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(498): warning C4625: “std::_Generic_error_category”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(498): warning C5026: “std::_Generic_error_category”: 已将移动构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(498): warning C4626: “std::_Generic_error_category”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(498): warning C5027: “std::_Generic_error_category”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(526): warning C4625: “std::_Iostream_error_category”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(526): warning C5026: “std::_Iostream_error_category”: 已将移动构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(526): warning C4626: “std::_Iostream_error_category”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(526): warning C5027: “std::_Iostream_error_category”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(574): warning C4625: “std::_System_error_category”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(574): warning C5026: “std::_System_error_category”: 已将移动构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(574): warning C4626: “std::_System_error_category”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(574): warning C5027: “std::_System_error_category”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xiosbase(589): warning C4820: “std::ios_base::_Fnarray”:“4”字节填充添加在 数据成员“std::ios_base::_Fnarray::_Index”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xiosbase(642): warning C4820: “std::ios_base”:“4”字节填充添加在 数据成员“std::ios_base::_Fmtfl”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(263): warning C4820: “std::numpunct<char>”:“6”字节填充添加在 数据成员“std::numpunct<char>::_Kseparator”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1848): note: 参见对正在编译的 类 模板 实例化 "std::numpunct<char>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(265): warning C4625: “std::numpunct<char>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(265): warning C4626: “std::numpunct<char>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1394): warning C4625: “std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1850): note: 参见对正在编译的 类 模板 实例化 "std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1394): warning C4626: “std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1833): warning C4625: “std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1852): note: 参见对正在编译的 类 模板 实例化 "std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1833): warning C4626: “std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(263): warning C4820: “std::numpunct<wchar_t>”:“4”字节填充添加在 数据成员“std::numpunct<wchar_t>::_Kseparator”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1854): note: 参见对正在编译的 类 模板 实例化 "std::numpunct<wchar_t>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(265): warning C4625: “std::numpunct<wchar_t>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(265): warning C4626: “std::numpunct<wchar_t>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1394): warning C4625: “std::num_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1856): note: 参见对正在编译的 类 模板 实例化 "std::num_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1394): warning C4626: “std::num_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1833): warning C4625: “std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1858): note: 参见对正在编译的 类 模板 实例化 "std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1833): warning C4626: “std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ios(188): warning C4820: “std::basic_ios<char,std::char_traits<char>>”:“7”字节填充添加在 数据成员“std::basic_ios<char,std::char_traits<char>>::_Fillch”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ios(194): note: 参见对正在编译的 类 模板 实例化 "std::basic_ios<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ios(188): warning C4820: “std::basic_ios<wchar_t,std::char_traits<wchar_t>>”:“6”字节填充添加在 数据成员“std::basic_ios<wchar_t,std::char_traits<wchar_t>>::_Fillch”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ios(196): note: 参见对正在编译的 类 模板 实例化 "std::basic_ios<wchar_t,std::char_traits<wchar_t>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(629): warning C4820: “std::basic_ostream<char,std::char_traits<char>>”:“4”字节填充添加在 数据成员“std::basic_ostream<char,std::char_traits<char>>::{vbptr}”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(687): note: 参见对正在编译的 类 模板 实例化 "std::basic_ostream<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(629): warning C4820: “std::basic_ostream<wchar_t,std::char_traits<wchar_t>>”:“4”字节填充添加在 数据成员“std::basic_ostream<wchar_t,std::char_traits<wchar_t>>::{vbptr}”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(689): note: 参见对正在编译的 类 模板 实例化 "std::basic_ostream<wchar_t,std::char_traits<wchar_t>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(743): warning C4820: “std::basic_istream<char,std::char_traits<char>>”:“4”字节填充添加在 数据成员“std::basic_istream<char,std::char_traits<char>>::_Chcount”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(773): note: 参见对正在编译的 类 模板 实例化 "std::basic_istream<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(743): warning C4820: “std::basic_istream<wchar_t,std::char_traits<wchar_t>>”:“4”字节填充添加在 数据成员“std::basic_istream<wchar_t,std::char_traits<wchar_t>>::_Chcount”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(774): note: 参见对正在编译的 类 模板 实例化 "std::basic_istream<wchar_t,std::char_traits<wchar_t>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(834): warning C4820: “std::basic_iostream<char,std::char_traits<char>>”:“4”字节填充添加在 基类“std::basic_ostream<char,std::char_traits<char>>”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(839): note: 参见对正在编译的 类 模板 实例化 "std::basic_iostream<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(834): warning C4820: “std::basic_iostream<wchar_t,std::char_traits<wchar_t>>”:“4”字节填充添加在 基类“std::basic_ostream<wchar_t,std::char_traits<wchar_t>>”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(840): note: 参见对正在编译的 类 模板 实例化 "std::basic_iostream<wchar_t,std::char_traits<wchar_t>>" 的引用
J:\opencv4.0.1\opencv\build\include\opencv2/core/cvdef.h(808): warning C4365: “初始化”: 从“int”转换到“unsigned int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cvdef.h(809): warning C4365: “初始化”: 从“int”转换到“unsigned int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cvdef.h(810): warning C4365: “初始化”: 从“int”转换到“unsigned int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/types.hpp(2419): warning C4946: reinterpret_cast 在相关类之间使用: “cv::Matx<double,4,1>”和“cv::Scalar_<double>”
  J:\opencv4.0.1\opencv\build\include\opencv2/core/matx.hpp(226): note: 参见“cv::Matx<double,4,1>”的声明
  J:\opencv4.0.1\opencv\build\include\opencv2/core/types.hpp(669): note: 参见“cv::Scalar_<double>”的声明
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(256): warning C4820: “cv::_InputArray”:“4”字节填充添加在 数据成员“cv::_InputArray::flags”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(560): warning C4820: “cv::UMatData”:“4”字节填充添加在 数据成员“cv::UMatData::flags”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(2569): warning C4820: “cv::UMat”:“4”字节填充添加在 数据成员“cv::UMat::usageFlags”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(2678): warning C4820: “cv::SparseMat::Hdr”:“4”字节填充添加在 数据成员“cv::SparseMat::Hdr::valueOffset”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(2922): warning C4820: “cv::SparseMat”:“4”字节填充添加在 数据成员“cv::SparseMat::flags”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(3414): warning C4820: “cv::NAryMatIterator”:“4”字节填充添加在 数据成员“cv::NAryMatIterator::narrays”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(3419): warning C4820: “cv::NAryMatIterator”:“4”字节填充添加在 数据成员“cv::NAryMatIterator::iterdepth”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(3545): warning C4820: “cv::MatExpr”:“4”字节填充添加在 数据成员“cv::MatExpr::flags”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(2571): warning C4626: “std::_Vb_val<_Alloc>”: 已将对齐运算符隐式定义为“已删除”
          with
          [
              _Alloc=std::allocator<bool>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(2577): note: 参见对正在编译的 类 模板 实例化 "std::_Vb_val<_Alloc>" 的引用
          with
          [
              _Alloc=std::allocator<bool>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(107): note: 参见对正在编译的 类 模板 实例化 "std::vector<bool,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=bool
          ]
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(550): warning C4365: “初始化”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(579): warning C4365: “初始化”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(915): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(2185): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(2191): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(2675): warning C4365: “初始化”: 从“size_t”转换到“ptrdiff_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(3830): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/persistence.hpp(454): warning C4820: “cv::FileStorage”:“4”字节填充添加在 数据成员“cv::FileStorage::state”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/persistence.hpp(1320): warning C4365: “return”: 从“size_t”转换到“ptrdiff_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core.hpp(134): warning C4820: “cv::Exception”:“4”字节填充添加在 数据成员“cv::Exception::code”后
J:\opencv4.0.1\opencv\build\include\opencv2/core.hpp(138): warning C4820: “cv::Exception”:“4”字节填充添加在 数据成员“cv::Exception::line”后
J:\opencv4.0.1\opencv\build\include\opencv2/core.hpp(2606): warning C4820: “cv::LDA”:“4”字节填充添加在 数据成员“cv::LDA::_num_components”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/operations.hpp(367): warning C4365: “参数”: 从“unsigned int”转换到“int”，有符号/无符号不匹配
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\time.h(36): warning C4820: “_timespec64”:“4”字节填充添加在 数据成员“_timespec64::tv_nsec”后
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\time.h(43): warning C4820: “timespec”:“4”字节填充添加在 数据成员“timespec::tv_nsec”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthrcommon.h(28): warning C4820: “<anonymous-tag>”:“4”字节填充添加在 数据成员“<anonymous-tag>::_Id”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xtimec.h(22): warning C4820: “xtime”:“4”字节填充添加在 数据成员“xtime::nsec”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthread(51): warning C5039: “_Thrd_start”: 可能引发函数的指针或引用传递到 -EHc 下的外部 C 函数。如果该函数引发异常，未定义行为可能发生。
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthread(137): warning C4820: “std::_Auto_cnd”:“7”字节填充添加在 数据成员“std::_Auto_cnd::_Active”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthread(161): warning C4820: “std::_Auto_mtx”:“7”字节填充添加在 数据成员“std::_Auto_mtx::_Active”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthread(215): warning C4820: “std::_Pad”:“7”字节填充添加在 数据成员“std::_Pad::_Started”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(313): warning C4820: “std::unique_lock<std::mutex>”:“7”字节填充添加在 数据成员“std::unique_lock<std::mutex>::_Owns”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(713): note: 参见对正在编译的 类 模板 实例化 "std::unique_lock<std::mutex>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(836): warning C4623: “std::_UInt_is_zero”: 已将默认构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(836): warning C4626: “std::_UInt_is_zero”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(836): warning C5027: “std::_UInt_is_zero”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(915): warning C4820: “std::timed_mutex”:“4”字节填充添加在 数据成员“std::timed_mutex::_My_locked”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(514): warning C4365: “return”: 从“unsigned int”转换到“int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(531): warning C4365: “return”: 从“unsigned int”转换到“int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(720): warning C4820: “cv::TLSDataContainer”:“4”字节填充添加在 数据成员“cv::TLSDataContainer::key_”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(1201): warning C4820: “cv::instr::NodeData”:“4”字节填充添加在 数据成员“cv::instr::NodeData::m_lineNum”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(1205): warning C4820: “cv::instr::NodeData”:“2”字节填充添加在 数据成员“cv::instr::NodeData::m_funError”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(1213): warning C4820: “cv::instr::NodeData”:“4”字节填充添加在 数据成员“cv::instr::NodeData::m_threads”后
J:\opencv4.0.1\opencv\build\include\opencv2/highgui.hpp(692): warning C4820: “cv::QtFont”:“4”字节填充添加在 数据成员“cv::QtFont::font_face”后
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(101): warning C4625: “cv::flann::KDTreeIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(101): warning C5026: “cv::flann::KDTreeIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(101): warning C4626: “cv::flann::KDTreeIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(101): warning C5027: “cv::flann::KDTreeIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(106): warning C4625: “cv::flann::LinearIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(106): warning C5026: “cv::flann::LinearIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(106): warning C4626: “cv::flann::LinearIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(106): warning C5027: “cv::flann::LinearIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(112): warning C4625: “cv::flann::CompositeIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(112): warning C5026: “cv::flann::CompositeIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(112): warning C4626: “cv::flann::CompositeIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(112): warning C5027: “cv::flann::CompositeIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(118): warning C4625: “cv::flann::AutotunedIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(118): warning C5026: “cv::flann::AutotunedIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(118): warning C4626: “cv::flann::AutotunedIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(118): warning C5027: “cv::flann::AutotunedIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(124): warning C4625: “cv::flann::HierarchicalClusteringIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(124): warning C5026: “cv::flann::HierarchicalClusteringIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(124): warning C4626: “cv::flann::HierarchicalClusteringIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(124): warning C5027: “cv::flann::HierarchicalClusteringIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(130): warning C4625: “cv::flann::KMeansIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(130): warning C5026: “cv::flann::KMeansIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(130): warning C4626: “cv::flann::KMeansIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(130): warning C5027: “cv::flann::KMeansIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(135): warning C4625: “cv::flann::LshIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(135): warning C5026: “cv::flann::LshIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(135): warning C4626: “cv::flann::LshIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(135): warning C5027: “cv::flann::LshIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(140): warning C4625: “cv::flann::SavedIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(140): warning C5026: “cv::flann::SavedIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(140): warning C4626: “cv::flann::SavedIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(140): warning C5027: “cv::flann::SavedIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(145): warning C4625: “cv::flann::SearchParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(145): warning C5026: “cv::flann::SearchParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(145): warning C4626: “cv::flann::SearchParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(145): warning C5027: “cv::flann::SearchParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(172): warning C4820: “cv::flann::Index”:“4”字节填充添加在 数据成员“cv::flann::Index::featureType”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(226): warning C4820: “cv::Feature2D”:“4”字节填充添加在 数据成员“cv::Feature2D::{vbptr}”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(300): warning C4820: “cv::BRISK”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(376): warning C4820: “cv::ORB”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(436): warning C4820: “cv::MSER”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(471): warning C4820: “cv::FastFeatureDetector”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(531): warning C4820: “cv::AgastFeatureDetector”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(585): warning C4820: “cv::GFTTDetector”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(627): warning C4820: “cv::SimpleBlobDetector::Params”:“4”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::maxThreshold”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(634): warning C4820: “cv::SimpleBlobDetector::Params”:“1”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::filterByArea”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(637): warning C4820: “cv::SimpleBlobDetector::Params”:“3”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::filterByCircularity”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(640): warning C4820: “cv::SimpleBlobDetector::Params”:“3”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::filterByInertia”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(643): warning C4820: “cv::SimpleBlobDetector::Params”:“3”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::filterByConvexity”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(647): warning C4820: “cv::SimpleBlobDetector::Params”:“4”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::maxConvexity”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(652): warning C4820: “cv::SimpleBlobDetector”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(709): warning C4820: “cv::KAZE”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(777): warning C4820: “cv::AKAZE”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(1141): warning C4820: “cv::BFMatcher”:“3”字节填充添加在 数据成员“cv::BFMatcher::crossCheck”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(1188): warning C4820: “cv::FlannBasedMatcher”:“4”字节填充添加在 数据成员“cv::FlannBasedMatcher::addedDescCount”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(1341): warning C4820: “cv::BOWTrainer”:“4”字节填充添加在 数据成员“cv::BOWTrainer::size”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(1363): warning C4820: “cv::BOWKMeansTrainer”:“4”字节填充添加在 数据成员“cv::BOWKMeansTrainer::clusterCount”后
J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.hpp(48): warning C4464: 相对包含路径包括 ".."
J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dict.hpp(107): warning C4820: “cv::dnn::dnn4_v20181221::DictValue”:“4”字节填充添加在 数据成员“cv::dnn::dnn4_v20181221::DictValue::type”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(2360): warning C4625: “std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(82): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dict.hpp(117): note: 参见对正在编译的 类 模板 实例化 "std::map<cv::String,cv::dnn::dnn4_v20181221::DictValue,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue
          ]
J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.hpp(120): warning C4820: “cv::dnn::dnn4_v20181221::BackendNode”:“4”字节填充添加在 数据成员“cv::dnn::dnn4_v20181221::BackendNode::backendId”后
J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.hpp(354): warning C4820: “cv::dnn::dnn4_v20181221::Layer”:“4”字节填充添加在 数据成员“cv::dnn::dnn4_v20181221::Layer::preferableTarget”后
j:\opencv4.0.1\opencv\build\include\opencv2\flann\matrix.h(110): warning C4820: “cvflann::UntypedMatrix”:“4”字节填充添加在 数据成员“cvflann::UntypedMatrix::type”后
j:\opencv4.0.1\opencv\build\include\opencv2\flann\matrix.h(97): warning C4365: “初始化”: 从“long”转换到“size_t”，有符号/无符号不匹配
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(2360): warning C4625: “std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(82): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(45): note: 参见对正在编译的 类 模板 实例化 "std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
j:\opencv4.0.1\opencv\build\include\opencv2\flann\dist.h(444): warning C4668: 没有将“__GNUC__”定义为预处理器宏，用“0”替换“#if/#elif”
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(83): warning C4820: “cvflann::PooledAllocator”:“4”字节填充添加在 数据成员“cvflann::PooledAllocator::remaining”后
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(188): warning C4820: “cvflann::PooledAllocator”:“4”字节填充添加在 数据成员“cvflann::PooledAllocator::wastedMemory”后
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(132): warning C4365: “=”: 从“unsigned __int64”转换到“int”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(143): warning C4365: “=”: 从“size_t”转换到“int”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(146): warning C4365: “参数”: 从“int”转换到“size_t”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(159): warning C4365: “=”: 从“size_t”转换到“int”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\random.h(123): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\random.h(125): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\random.h(148): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\logger.h(131): warning C4820: “cvflann::Logger”:“4”字节填充添加在 数据成员“cvflann::Logger::logLevel”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(34): warning C4625: “std::money_base”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(34): warning C5026: “std::money_base”: 已将移动构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(34): warning C4626: “std::money_base”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(34): warning C5027: “std::money_base”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(260): warning C4820: “std::_Mpunct<_Elem>”:“6”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_Kseparator”后
          with
          [
              _Elem=char
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(276): note: 参见对正在编译的 类 模板 实例化 "std::_Mpunct<_Elem>" 的引用
          with
          [
              _Elem=char
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1017): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<char,true>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(268): warning C4820: “std::_Mpunct<_Elem>”:“3”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_International”后
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4820: “std::_Mpunct<_Elem>”:“4”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_Cvt”后
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4625: “std::_Mpunct<_Elem>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4626: “std::_Mpunct<_Elem>”: 已将对齐运算符隐式定义为“已删除”
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4625: “std::moneypunct<char,true>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4626: “std::moneypunct<char,true>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4625: “std::moneypunct<char,false>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1018): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<char,false>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4626: “std::moneypunct<char,false>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(694): warning C4625: “std::money_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1025): note: 参见对正在编译的 类 模板 实例化 "std::money_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(694): warning C4626: “std::money_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1002): warning C4625: “std::money_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1028): note: 参见对正在编译的 类 模板 实例化 "std::money_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1002): warning C4626: “std::money_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(260): warning C4820: “std::_Mpunct<_Elem>”:“4”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_Kseparator”后
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(276): note: 参见对正在编译的 类 模板 实例化 "std::_Mpunct<_Elem>" 的引用
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1030): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<wchar_t,true>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(268): warning C4820: “std::_Mpunct<_Elem>”:“3”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_International”后
          with
          [
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4820: “std::_Mpunct<_Elem>”:“4”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_Cvt”后
          with
          [
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4625: “std::_Mpunct<_Elem>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4626: “std::_Mpunct<_Elem>”: 已将对齐运算符隐式定义为“已删除”
          with
          [
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4625: “std::moneypunct<wchar_t,true>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4626: “std::moneypunct<wchar_t,true>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4625: “std::moneypunct<wchar_t,false>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1031): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<wchar_t,false>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4626: “std::moneypunct<wchar_t,false>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(694): warning C4625: “std::money_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1038): note: 参见对正在编译的 类 模板 实例化 "std::money_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(694): warning C4626: “std::money_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1002): warning C4625: “std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1041): note: 参见对正在编译的 类 模板 实例化 "std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1002): warning C4626: “std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(33): warning C4625: “std::time_base”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(33): warning C4626: “std::time_base”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(732): warning C4625: “std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1258): note: 参见对正在编译的 类 模板 实例化 "std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(732): warning C4626: “std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(902): warning C4625: “std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1260): note: 参见对正在编译的 类 模板 实例化 "std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(902): warning C4626: “std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(732): warning C4625: “std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1265): note: 参见对正在编译的 类 模板 实例化 "std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(732): warning C4626: “std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1056): warning C4625: “std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1267): note: 参见对正在编译的 类 模板 实例化 "std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1056): warning C4626: “std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\iomanip(513): warning C4820: “std::_Smanip<std::ios_base::fmtflags>”:“4”字节填充添加在 数据成员“std::_Smanip<std::ios_base::fmtflags>::_Manarg”后
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(104): note: 参见对正在编译的 类 模板 实例化 "std::_Smanip<std::ios_base::fmtflags>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(2360): warning C4625: “std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket,
              _Pr=std::less<cvflann::lsh::BucketKey>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(82): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket,
              _Pr=std::less<cvflann::lsh::BucketKey>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(322): note: 参见对正在编译的 类 模板 实例化 "std::map<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(343): note: 参见对正在编译的 类 模板 实例化 "cvflann::lsh::LshTable<ElementType>" 的引用
j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(330): warning C4820: “cvflann::lsh::LshTable<unsigned char>”:“4”字节填充添加在 数据成员“cvflann::lsh::LshTable<unsigned char>::speed_level_”后
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(349): note: 参见对正在编译的 类 模板 实例化 "cvflann::lsh::LshTable<unsigned char>" 的引用
j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(367): warning C4365: “初始化”: 从“_Ty”转换到“size_t”，有符号/无符号不匹配
          with
          [
              _Ty=int
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\utility(320): warning C4820: “std::pair<const _Kty,_Ty>”:“4”字节填充添加在 数据成员“std::pair<const _Kty,_Ty>::first”后
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(460): note: 参见对正在编译的 类 模板 实例化 "std::pair<const _Kty,_Ty>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket
          ]
J:\opencv4.0.1\opencv\build\include\opencv2/imgproc.hpp(1239): warning C4820: “cv::Subdiv2D”:“3”字节填充添加在 数据成员“cv::Subdiv2D::validGeometry”后
J:\opencv4.0.1\opencv\build\include\opencv2/ml.hpp(1174): warning C4820: “cv::ml::DTrees::Split”:“3”字节填充添加在 数据成员“cv::ml::DTrees::Split::inversed”后
J:\opencv4.0.1\opencv\build\include\opencv2/objdetect.hpp(611): warning C4820: “cv::HOGDescriptor”:“4”字节填充添加在 数据成员“cv::HOGDescriptor::histogramNormType”后
J:\opencv4.0.1\opencv\build\include\opencv2/objdetect.hpp(617): warning C4820: “cv::HOGDescriptor”:“7”字节填充添加在 数据成员“cv::HOGDescriptor::gammaCorrection”后
J:\opencv4.0.1\opencv\build\include\opencv2/objdetect.hpp(668): warning C4820: “cv::HOGDescriptor”:“7”字节填充添加在 数据成员“cv::HOGDescriptor::signedGradient”后
J:\opencv4.0.1\opencv\build\include\opencv2/objdetect/detection_based_tracker.hpp(202): warning C4820: “cv::DetectionBasedTracker::TrackedObject”:“4”字节填充添加在 数据成员“cv::DetectionBasedTracker::TrackedObject::id”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.hpp(323): warning C4820: “cv::cuda::GpuMat”:“4”字节填充添加在 数据成员“cv::cuda::GpuMat::cols”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.hpp(588): warning C4820: “cv::cuda::HostMem”:“4”字节填充添加在 数据成员“cv::cuda::HostMem::cols”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.hpp(597): warning C4820: “cv::cuda::HostMem”:“4”字节填充添加在 数据成员“cv::cuda::HostMem::alloc_type”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.inl.hpp(301): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.inl.hpp(307): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.inl.hpp(482): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.inl.hpp(488): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(233): warning C4266: “cv::Rect cv::detail::PlaneWarper::buildMaps(cv::Size,cv::InputArray,cv::InputArray,cv::InputArray,cv::OutputArray,cv::OutputArray)”: 不重写基“cv::detail::PlaneWarper”中的虚拟成员函数；函数被隐藏
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(192): note: 参见“cv::detail::PlaneWarper::buildMaps”的声明
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(180): note: 参见“cv::detail::PlaneWarper”的声明
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(233): warning C4266: “cv::Point cv::detail::PlaneWarper::warp(cv::InputArray,cv::InputArray,cv::InputArray,cv::InputArray,int,int,cv::OutputArray)”: 不重写基“cv::detail::PlaneWarper”中的虚拟成员函数；函数被隐藏
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(197): note: 参见“cv::detail::PlaneWarper::warp”的声明
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(180): note: 参见“cv::detail::PlaneWarper”的声明
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(62): warning C4820: “cv::detail::ImageFeatures”:“4”字节填充添加在 数据成员“cv::detail::ImageFeatures::img_size”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(110): warning C4820: “cv::detail::MatchesInfo”:“4”字节填充添加在 数据成员“cv::detail::MatchesInfo::num_inliers”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(165): warning C4820: “cv::detail::FeaturesMatcher”:“7”字节填充添加在 数据成员“cv::detail::FeaturesMatcher::is_thread_safe_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(211): warning C4820: “cv::detail::BestOf2NearestRangeMatcher”:“4”字节填充添加在 数据成员“cv::detail::BestOf2NearestRangeMatcher::range_width_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(246): warning C4820: “cv::detail::AffineBestOf2NearestMatcher”:“7”字节填充添加在 数据成员“cv::detail::AffineBestOf2NearestMatcher::full_affine_”后
j:\opencv4.0.1\opencv\build\include\opencv2\stitching\detail\util.hpp(89): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/motion_estimators.hpp(112): warning C4820: “cv::detail::HomographyBasedEstimator”:“7”字节填充添加在 数据成员“cv::detail::HomographyBasedEstimator::is_focals_estimated_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/exposure_compensate.hpp(93): warning C4820: “cv::detail::ExposureCompensator”:“7”字节填充添加在 数据成员“cv::detail::ExposureCompensator::updateGain”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/seam_finders.hpp(216): warning C4820: “cv::detail::DpSeamFinder”:“4”字节填充添加在 数据成员“cv::detail::DpSeamFinder::unionSize_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/seam_finders.hpp(223): warning C4820: “cv::detail::DpSeamFinder”:“4”字节填充添加在 数据成员“cv::detail::DpSeamFinder::ncomps_”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(2360): warning C4625: “std::_Tree<std::_Tset_traits<_Kty,_Pr,_Alloc,false>>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Kty=std::pair<int,int>,
              _Pr=std::less<std::pair<int,int>>,
              _Alloc=std::allocator<std::pair<int,int>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\set(55): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tset_traits<_Kty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=std::pair<int,int>,
              _Pr=std::less<std::pair<int,int>>,
              _Alloc=std::allocator<std::pair<int,int>>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/seam_finders.hpp(227): note: 参见对正在编译的 类 模板 实例化 "std::set<std::pair<int,int>,std::less<_Kty>,std::allocator<_Ty>>" 的引用
          with
          [
              _Kty=std::pair<int,int>,
              _Ty=std::pair<int,int>
          ]
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/blenders.hpp(119): warning C4820: “cv::detail::FeatherBlender”:“4”字节填充添加在 数据成员“cv::detail::FeatherBlender::sharpness_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/blenders.hpp(145): warning C4820: “cv::detail::MultiBandBlender”:“3”字节填充添加在 数据成员“cv::detail::MultiBandBlender::can_use_gpu_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching.hpp(296): warning C4820: “cv::Stitcher”:“4”字节填充添加在 数据成员“cv::Stitcher::interp_flags_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching.hpp(302): warning C4820: “cv::Stitcher”:“3”字节填充添加在 数据成员“cv::Stitcher::do_wave_correct_”后
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\um\winbase.h(7417): warning C5039: “TpSetCallbackCleanupGroup”: 可能引发函数的指针或引用传递到 -EHc 下的外部 C 函数。如果该函数引发异常，未定义行为可能发生。
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\platform.h(72): warning C4626: “ncnn::MutexLockGuard”: 已将对齐运算符隐式定义为“已删除”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\platform.h(105): warning C5039: “_beginthreadex”: 可能引发函数的指针或引用传递到 -EHc 下的外部 C 函数。如果该函数引发异常，未定义行为可能发生。
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\blob.h(38): warning C4820: “ncnn::Blob”:“4”字节填充添加在 数据成员“ncnn::Blob::producer”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(21): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\allocator.h(150): warning C4820: “ncnn::PoolAllocator”:“4”字节填充添加在 数据成员“ncnn::PoolAllocator::size_compare_ratio”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\allocator.h(172): warning C4820: “ncnn::UnlockedPoolAllocator”:“4”字节填充添加在 数据成员“ncnn::UnlockedPoolAllocator::size_compare_ratio”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(77): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(202): warning C4820: “ncnn::Mat”:“4”字节填充添加在 数据成员“ncnn::Mat::elempack”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(430): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(436): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(448): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(454): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(499): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(506): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(553): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(560): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(602): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(626): warning C4458: “allocator”的声明隐藏了类成员
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(202): note: 参见“ncnn::Mat::allocator”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(675): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(708): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(771): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(801): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(861): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(891): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(53): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(39): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(53): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(37): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(66): warning C4626: “ncnn::ModelBinFromMemory”: 已将对齐运算符隐式定义为“已删除”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(66): warning C5027: “ncnn::ModelBinFromMemory”: 已将移动赋值运算符隐式定义为“已删除”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(66): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(39): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(66): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(37): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(78): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(39): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(78): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(37): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\option.h(41): warning C4820: “ncnn::Option”:“3”字节填充添加在 数据成员“ncnn::Option::lightmode”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\option.h(90): warning C4820: “ncnn::Option”:“6”字节填充添加在 数据成员“ncnn::Option::use_packing_layout”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\FaceDetector.h(28): warning C4244: “初始化”: 从“_Rep”转换到“double”，可能丢失数据
          with
          [
              _Rep=__int64
          ]
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\FaceDetector.h(91): warning C4820: “Detector”:“4”字节填充添加在 数据成员“Detector::_mean_val”后
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(41): warning C4244: “初始化”: 从“const _Ty”转换到“float”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(44): warning C4244: “参数”: 从“float”转换到“_Tp”，可能丢失数据
          with
          [
              _Tp=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(45): warning C4244: “参数”: 从“float”转换到“_Tp”，可能丢失数据
          with
          [
              _Tp=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(60): warning C4388: “<”: 有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(61): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(61): warning C4244: “参数”: 从“float”转换到“_Tp”，可能丢失数据
          with
          [
              _Tp=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(64): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(66): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(66): warning C4244: “参数”: 从“float”转换到“_Tp”，可能丢失数据
          with
          [
              _Tp=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(67): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(67): warning C4244: “参数”: 从“float”转换到“_Tp”，可能丢失数据
          with
          [
              _Tp=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(68): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(68): warning C4244: “参数”: 从“float”转换到“_Tp”，可能丢失数据
          with
          [
              _Tp=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(69): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(69): warning C4244: “参数”: 从“float”转换到“_Tp”，可能丢失数据
          with
          [
              _Tp=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(70): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(70): warning C4244: “参数”: 从“float”转换到“_Tp”，可能丢失数据
          with
          [
              _Tp=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(71): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(71): warning C4244: “参数”: 从“float”转换到“_Tp”，可能丢失数据
          with
          [
              _Tp=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(64): warning C4996: 'sprintf': This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(1774): note: 参见“sprintf”的声明
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(13): warning C4100: “argv”: 未引用的形参
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp(13): warning C4100: “argc”: 未引用的形参
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(739): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(732): note: 编译 类 模板 成员函数 "std::vector<cv::detail::CameraParams,std::allocator<_Ty>>::vector(const std::vector<_Ty,std::allocator<_Ty>> &)" 时
          with
          [
              _Ty=cv::detail::CameraParams
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching.hpp(284): note: 参见对正在编译的函数 模板 实例化“std::vector<cv::detail::CameraParams,std::allocator<_Ty>>::vector(const std::vector<_Ty,std::allocator<_Ty>> &)”的引用
          with
          [
              _Ty=cv::detail::CameraParams
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching.hpp(315): note: 参见对正在编译的 类 模板 实例化 "std::vector<cv::detail::CameraParams,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=cv::detail::CameraParams
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(710): warning C4820: “std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>”:“7”字节填充添加在 数据成员“std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Failed”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1031): note: 参见对正在编译的 类 模板 实例化 "std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1031): note: 编译 类 模板 成员函数 "_OutIt std::time_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,std::time_put<wchar_t,_OutIt>::_Elem,const tm *,char,char) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1267): note: 参见对正在编译的 类 模板 实例化 "std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(631): warning C4820: “std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>”:“1”字节填充添加在 数据成员“std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Got”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(476): note: 参见对正在编译的 类 模板 实例化 "std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(476): note: 编译 类 模板 成员函数 "_InIt std::time_get<wchar_t,_InIt>::do_get(_InIt,_InIt,std::ios_base &,std::ios_base::iostate &,tm *,char,char) const" 时
          with
          [
              _InIt=std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1265): note: 参见对正在编译的 类 模板 实例化 "std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(632): warning C4820: “std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>”:“4”字节填充添加在 数据成员“std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Val”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(549): warning C4820: “std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Istreambuf_proxy”:“6”字节填充添加在 数据成员“std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Istreambuf_proxy::_Keep”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(486): note: 参见对正在编译的 类 模板 实例化 "std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Istreambuf_proxy" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(710): warning C4820: “std::ostreambuf_iterator<char,std::char_traits<char>>”:“7”字节填充添加在 数据成员“std::ostreambuf_iterator<char,std::char_traits<char>>::_Failed”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(875): note: 参见对正在编译的 类 模板 实例化 "std::ostreambuf_iterator<char,std::char_traits<char>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(875): note: 编译 类 模板 成员函数 "_OutIt std::time_put<char,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,const tm *,char,char) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<char,std::char_traits<char>>,
              _Elem=char
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1260): note: 参见对正在编译的 类 模板 实例化 "std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(632): warning C4820: “std::istreambuf_iterator<char,std::char_traits<char>>”:“6”字节填充添加在 数据成员“std::istreambuf_iterator<char,std::char_traits<char>>::_Val”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(476): note: 参见对正在编译的 类 模板 实例化 "std::istreambuf_iterator<char,std::char_traits<char>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(476): note: 编译 类 模板 成员函数 "_InIt std::time_get<char,_InIt>::do_get(_InIt,_InIt,std::ios_base &,std::ios_base::iostate &,tm *,char,char) const" 时
          with
          [
              _InIt=std::istreambuf_iterator<char,std::char_traits<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1258): note: 参见对正在编译的 类 模板 实例化 "std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(549): warning C4820: “std::istreambuf_iterator<char,std::char_traits<char>>::_Istreambuf_proxy”:“7”字节填充添加在 数据成员“std::istreambuf_iterator<char,std::char_traits<char>>::_Istreambuf_proxy::_Keep”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(486): note: 参见对正在编译的 类 模板 实例化 "std::istreambuf_iterator<char,std::char_traits<char>>::_Istreambuf_proxy" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\utility(321): warning C4820: “std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool>”:“7”字节填充添加在 数据成员“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool>::second”后
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(199): note: 参见对正在编译的 类 模板 实例化 "std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(198): note: 编译 类 模板 成员函数 "cvflann::any &std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)" 时
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(49): note: 参见对正在编译的函数 模板 实例化“cvflann::any &std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)”的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(45): note: 参见对正在编译的 类 模板 实例化 "std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(680): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(673): note: 编译 类 模板 成员函数 "std::vector<std::_Vbase,std::allocator<std::_Vbase>>::vector(const unsigned __int64,const _Ty &,const _Alloc &)" 时
          with
          [
              _Ty=std::_Vbase,
              _Alloc=std::allocator<std::_Vbase>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(490): note: 参见对正在编译的函数 模板 实例化“std::vector<std::_Vbase,std::allocator<std::_Vbase>>::vector(const unsigned __int64,const _Ty &,const _Alloc &)”的引用
          with
          [
              _Ty=std::_Vbase,
              _Alloc=std::allocator<std::_Vbase>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\type_traits(1049): note: 参见对正在编译的 类 模板 实例化 "std::vector<std::_Vbase,std::allocator<std::_Vbase>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(2472): note: 查看指向正在编译的变量模板“const bool is_nothrow_default_constructible_v<std::vector<unsigned int,std::allocator<unsigned int> > >”的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(2577): note: 参见对正在编译的 类 模板 实例化 "std::_Vb_val<_Alloc>" 的引用
          with
          [
              _Alloc=std::allocator<bool>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(107): note: 参见对正在编译的 类 模板 实例化 "std::vector<bool,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=bool
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(666): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(659): note: 编译 类 模板 成员函数 "std::vector<int,std::allocator<_Ty>>::vector(const unsigned __int64,const _Alloc &)" 时
          with
          [
              _Ty=int,
              _Alloc=std::allocator<int>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(357): note: 参见对正在编译的函数 模板 实例化“std::vector<int,std::allocator<_Ty>>::vector(const unsigned __int64,const _Alloc &)”的引用
          with
          [
              _Ty=int,
              _Alloc=std::allocator<int>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1616): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1616): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1616): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1599): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,long double) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1858): note: 参见对正在编译的 类 模板 实例化 "std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1592): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1592): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1592): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1575): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,double) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1569): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1569): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1569): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1565): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,unsigned __int64) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1559): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1559): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1559): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1555): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,__int64) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1549): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1549): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1549): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1545): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,unsigned long) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1539): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1539): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1539): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1535): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,long) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(161): warning C4820: “std::basic_ostream<char,std::char_traits<char>>::sentry”:“7”字节填充添加在 数据成员“std::basic_ostream<char,std::char_traits<char>>::sentry::_Ok”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(443): note: 参见对正在编译的 类 模板 实例化 "std::basic_ostream<char,std::char_traits<char>>::sentry" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(441): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(double)" 时
  J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(429): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(double)”的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(687): note: 参见对正在编译的 类 模板 实例化 "std::basic_ostream<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(453): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(413): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(401): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned __int64)" 时
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(110): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned __int64)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(393): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(381): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(__int64)" 时
  J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.inl.hpp(307): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(__int64)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(333): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(321): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned int)" 时
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(116): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned int)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(313): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(296): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(int)" 时
  J:\opencv4.0.1\opencv\build\include\opencv2/core/cvstd.inl.hpp(182): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(int)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(401): warning C4820: “std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”:“6”字节填充添加在 数据成员“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>::_Isnil”后
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(59): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>" 的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(58): note: 编译 类 模板 成员函数 "std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0> &std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>::operator ++(void)" 时
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(240): note: 参见对正在编译的函数 模板 实例化“std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0> &std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>::operator ++(void)”的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(196): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>" 的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(460): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>" 的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(401): warning C4820: “std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”:“6”字节填充添加在 数据成员“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>::_Isnil”后
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(59): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(58): note: 编译 类 模板 成员函数 "std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0> &std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>::operator ++(void)" 时
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(240): note: 参见对正在编译的函数 模板 实例化“std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0> &std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>::operator ++(void)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(196): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(84): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(401): warning C4820: “std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”:“6”字节填充添加在 数据成员“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>::_Isnil”后
          with
          [
              _Ty=std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>,
              _Alloc=std::allocator<std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(225): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>,
              _Alloc=std::allocator<std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(218): note: 编译 类 模板 成员函数 "const std::pair<const _Kty,_Ty> &std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>::operator *(void) const" 时
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(230): note: 参见对正在编译的函数 模板 实例化“const std::pair<const _Kty,_Ty> &std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>::operator *(void) const”的引用
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(309): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.inl.hpp(335): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(376): warning C4820: “std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”:“4”字节填充添加在 数据成员“std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>::_Myval”后
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(605): note: 参见对正在编译的 类 模板 实例化 "std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>" 的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(604): note: 编译 类 模板 成员函数 "void std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>::_Freeheadnode(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *)" 时
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(480): note: 参见对正在编译的函数 模板 实例化“void std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>::_Freeheadnode(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(689): note: 参见对正在编译的 类 模板 实例化 "std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>" 的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(740): note: 参见对正在编译的 类 模板 实例化 "std::_List_buy<_Ty,_Alloc>" 的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\stitching\detail\util.hpp(89): note: 参见对正在编译的 类 模板 实例化 "std::list<cv::detail::GraphEdge,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(376): warning C4623: “std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”: 已将默认构造函数隐式定义为“已删除”
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(181): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(176): note: 编译 类 模板 成员函数 "void std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)" 时
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(139): note: 参见对正在编译的函数 模板 实例化“void std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(622): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(609): note: 编译 类 模板 成员函数 "std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>::_Buynode0(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *)" 时
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(600): note: 参见对正在编译的函数 模板 实例化“std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>::_Buynode0(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(935): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(927): note: 编译 类 模板 成员函数 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buyheadnode(void)" 时
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,
              _Traits=std::_Tmap_traits<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<cvflann::lsh::BucketKey>,std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(808): note: 参见对正在编译的函数 模板 实例化“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buyheadnode(void)”的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,
              _Traits=std::_Tmap_traits<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<cvflann::lsh::BucketKey>,std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1032): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_comp_alloc<_Traits>" 的引用
          with
          [
              _Traits=std::_Tmap_traits<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<cvflann::lsh::BucketKey>,std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(82): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket,
              _Pr=std::less<cvflann::lsh::BucketKey>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(322): note: 参见对正在编译的 类 模板 实例化 "std::map<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(343): note: 参见对正在编译的 类 模板 实例化 "cvflann::lsh::LshTable<ElementType>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(530): warning C4774: “_scprintf”: 参数 1 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(530): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(530): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(583): note: 参见对正在编译的函数 模板 实例化“std::string std::_Floating_to_string<float>(const char *,_Ty)”的引用
          with
          [
              _Ty=float
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(532): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(532): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(532): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(542): warning C4774: “_scwprintf”: 参数 1 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(542): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(542): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(629): note: 参见对正在编译的函数 模板 实例化“std::wstring std::_Floating_to_wstring<float>(const wchar_t *,_Ty)”的引用
          with
          [
              _Ty=float
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(544): warning C4774: “swprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(544): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(544): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(826): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  J:\opencv4.0.1\opencv\build\include\opencv2/core/cvstd.inl.hpp(79): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::operator <<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,const char *)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(974): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(922): note: 参见对正在编译的函数 模板 实例化“std::vector<std::_Vbase,std::allocator<std::_Vbase>> *std::vector<std::vector<std::_Vbase,std::allocator<std::_Vbase>>,std::allocator<_Ty>>::_Emplace_reallocate<_Ty>(std::vector<std::_Vbase,std::allocator<std::_Vbase>> *const ,_Ty &&)”的引用
          with
          [
              _Ty=std::vector<std::_Vbase,std::allocator<std::_Vbase>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(922): note: 参见对正在编译的函数 模板 实例化“std::vector<std::_Vbase,std::allocator<std::_Vbase>> *std::vector<std::vector<std::_Vbase,std::allocator<std::_Vbase>>,std::allocator<_Ty>>::_Emplace_reallocate<_Ty>(std::vector<std::_Vbase,std::allocator<std::_Vbase>> *const ,_Ty &&)”的引用
          with
          [
              _Ty=std::vector<std::_Vbase,std::allocator<std::_Vbase>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(937): note: 参见对正在编译的函数 模板 实例化“void std::vector<std::vector<std::_Vbase,std::allocator<std::_Vbase>>,std::allocator<_Ty>>::emplace_back<std::vector<std::_Vbase,std::allocator<std::_Vbase>>>(std::vector<std::_Vbase,std::allocator<std::_Vbase>> &&)”的引用
          with
          [
              _Ty=std::vector<std::_Vbase,std::allocator<std::_Vbase>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(936): note: 编译 类 模板 成员函数 "void std::vector<std::vector<std::_Vbase,std::allocator<std::_Vbase>>,std::allocator<_Ty>>::push_back(_Ty &&)" 时
          with
          [
              _Ty=std::vector<std::_Vbase,std::allocator<std::_Vbase>>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(490): note: 参见对正在编译的函数 模板 实例化“void std::vector<std::vector<std::_Vbase,std::allocator<std::_Vbase>>,std::allocator<_Ty>>::push_back(_Ty &&)”的引用
          with
          [
              _Ty=std::vector<std::_Vbase,std::allocator<std::_Vbase>>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(93): note: 参见对正在编译的 类 模板 实例化 "std::vector<std::vector<std::_Vbase,std::allocator<std::_Vbase>>,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=std::vector<std::_Vbase,std::allocator<std::_Vbase>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(1448): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(1482): note: 参见对正在编译的函数 模板 实例化“void std::vector<size_t,std::allocator<_Ty>>::_Resize<std::vector<_Ty,std::allocator<_Ty>>::resize::<lambda_a46a035c1a65e960d545ef2debaf34ef>>(const unsigned __int64,_Lambda)”的引用
          with
          [
              _Ty=size_t,
              _Lambda=std::vector<size_t,std::allocator<size_t>>::resize::<lambda_a46a035c1a65e960d545ef2debaf34ef>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(1482): note: 参见对正在编译的函数 模板 实例化“void std::vector<size_t,std::allocator<_Ty>>::_Resize<std::vector<_Ty,std::allocator<_Ty>>::resize::<lambda_a46a035c1a65e960d545ef2debaf34ef>>(const unsigned __int64,_Lambda)”的引用
          with
          [
              _Ty=size_t,
              _Lambda=std::vector<size_t,std::allocator<size_t>>::resize::<lambda_a46a035c1a65e960d545ef2debaf34ef>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(1476): note: 编译 类 模板 成员函数 "void std::vector<size_t,std::allocator<_Ty>>::resize(const unsigned __int64)" 时
          with
          [
              _Ty=size_t
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\dynamic_bitset.h(122): note: 参见对正在编译的函数 模板 实例化“void std::vector<size_t,std::allocator<_Ty>>::resize(const unsigned __int64)”的引用
          with
          [
              _Ty=size_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(558): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(546): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::put(_Elem)" 时
          with
          [
              _Elem=char
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(1020): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::put(_Elem)”的引用
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(212): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(200): note: 编译 类 模板 成员函数 "void std::numpunct<wchar_t>::_Init(const std::_Locinfo &,bool)" 时
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(160): note: 参见对正在编译的函数 模板 实例化“void std::numpunct<wchar_t>::_Init(const std::_Locinfo &,bool)”的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1854): note: 参见对正在编译的 类 模板 实例化 "std::numpunct<wchar_t>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(161): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(149): note: 编译 类 模板 成员函数 "void std::_Mpunct<_Elem>::_Init(const std::_Locinfo &,bool)" 时
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(103): note: 参见对正在编译的函数 模板 实例化“void std::_Mpunct<_Elem>::_Init(const std::_Locinfo &,bool)”的引用
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(276): note: 参见对正在编译的 类 模板 实例化 "std::_Mpunct<_Elem>" 的引用
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1030): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<wchar_t,true>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xstring_insert.h(58): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(174): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::_Insert_string<char,std::char_traits<char>,unsigned __int64>(std::basic_ostream<char,std::char_traits<char>> &,const _Elem *const ,const _SizeT)”的引用
          with
          [
              _Elem=char,
              _SizeT=unsigned __int64
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.inl.hpp(319): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::operator <<<char,std::char_traits<char>,std::allocator<char>>(std::basic_ostream<char,std::char_traits<char>> &,const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(271): warning C4625: “std::_Tuple_val<_This>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _This=std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(845): note: 参见对正在编译的 类 模板 实例化 "std::_Tuple_val<_This>" 的引用
          with
          [
              _This=std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(232): note: 参见对正在编译的 类 模板 实例化 "std::tuple<_Ty &&>" 的引用
          with
          [
              _Ty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(264): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,>(_Keyty &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Keyty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(263): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,>(_Keyty &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Keyty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(199): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(199): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(198): note: 编译 类 模板 成员函数 "cvflann::any &std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)" 时
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(49): note: 参见对正在编译的函数 模板 实例化“cvflann::any &std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)”的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(271): warning C4626: “std::_Tuple_val<_This>”: 已将对齐运算符隐式定义为“已删除”
          with
          [
              _This=std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(271): warning C5027: “std::_Tuple_val<_This>”: 已将移动赋值运算符隐式定义为“已删除”
          with
          [
              _This=std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(846): warning C4625: “std::tuple<_Ty &&>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Ty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(2903): warning C4365: “=”: 从“const _Ty”转换到“unsigned __int64”，有符号/无符号不匹配
          with
          [
              _Ty=int
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(2917): note: 参见对正在编译的函数 模板 实例化“void std::_Fill_unchecked1<_FwdIt,_Ty>(_FwdIt,_FwdIt,const _Ty &,std::false_type)”的引用
          with
          [
              _FwdIt=unsigned __int64 *,
              _Ty=int
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(2925): note: 参见对正在编译的函数 模板 实例化“void std::_Fill_unchecked<unsigned __int64*,_Ty>(_FwdIt,_FwdIt,const _Ty &)”的引用
          with
          [
              _Ty=int,
              _FwdIt=unsigned __int64 *
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\dynamic_bitset.h(79): note: 参见对正在编译的函数 模板 实例化“void std::fill<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>,int>(_FwdIt,_FwdIt,const int &)”的引用
          with
          [
              _Ty=size_t,
              _FwdIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<size_t>>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1193): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1000): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::assign<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1000): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::assign<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(986): note: 编译 类 模板 成员函数 "std::list<cv::detail::GraphEdge,std::allocator<_Ty>> &std::list<_Ty,std::allocator<_Ty>>::operator =(const std::list<_Ty,std::allocator<_Ty>> &)" 时
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(2903): note: 参见对正在编译的函数 模板 实例化“std::list<cv::detail::GraphEdge,std::allocator<_Ty>> &std::list<_Ty,std::allocator<_Ty>>::operator =(const std::list<_Ty,std::allocator<_Ty>> &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(433): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(421): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(float)" 时
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(float)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(234): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(222): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(bool)" 时
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(bool)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(985): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1162): note: 参见对正在编译的函数 模板 实例化“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&> &&,std::tuple<> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Traits=std::_Tmap_traits<cv::String,cvflann::any,std::less<cv::String>,std::allocator<std::pair<const cv::String,cvflann::any>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1162): note: 参见对正在编译的函数 模板 实例化“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&> &&,std::tuple<> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Traits=std::_Tmap_traits<cv::String,cvflann::any,std::less<cv::String>,std::allocator<std::pair<const cv::String,cvflann::any>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(232): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&> &&,std::tuple<> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(232): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&> &&,std::tuple<> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(264): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,>(_Keyty &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Keyty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(263): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,>(_Keyty &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Keyty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1720): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1163): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_hint<_Value_type&,std::_Tree_node<_Value_type,std::_Default_allocator_traits<_Alloc>::void_pointer>*>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Valty=std::pair<const cv::String,cvflann::any> &,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1163): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_hint<_Value_type&,std::_Tree_node<_Value_type,std::_Default_allocator_traits<_Alloc>::void_pointer>*>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Valty=std::pair<const cv::String,cvflann::any> &,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1209): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1190): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Reusenode<const cv::detail::GraphEdge&>(std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_TArg)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _TArg=const cv::detail::GraphEdge &
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1190): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Reusenode<const cv::detail::GraphEdge&>(std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_TArg)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _TArg=const cv::detail::GraphEdge &
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1000): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::assign<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1000): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::assign<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(801): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(796): note: 编译 类 模板 成员函数 "std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::list(const std::list<_Ty,std::allocator<_Ty>> &)" 时
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xmemory0(881): note: 参见对正在编译的函数 模板 实例化“std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::list(const std::list<_Ty,std::allocator<_Ty>> &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(961): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(951): note: 编译 类 模板 成员函数 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode0(void)" 时
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Traits=std::_Tmap_traits<cv::String,cvflann::any,std::less<cv::String>,std::allocator<std::pair<const cv::String,cvflann::any>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(977): note: 参见对正在编译的函数 模板 实例化“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode0(void)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Traits=std::_Tmap_traits<cv::String,cvflann::any,std::less<cv::String>,std::allocator<std::pair<const cv::String,cvflann::any>>,false>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1796): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1726): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_nohint<_Value_type&,_Nodety>(bool,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *,
              _Valty=std::pair<const cv::String,cvflann::any> &
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1725): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_nohint<_Value_type&,_Nodety>(bool,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *,
              _Valty=std::pair<const cv::String,cvflann::any> &
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1163): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_hint<_Value_type&,std::_Tree_node<_Value_type,std::_Default_allocator_traits<_Alloc>::void_pointer>*>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Valty=std::pair<const cv::String,cvflann::any> &,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1163): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_hint<_Value_type&,std::_Tree_node<_Value_type,std::_Default_allocator_traits<_Alloc>::void_pointer>*>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Valty=std::pair<const cv::String,cvflann::any> &,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(719): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(950): note: 参见对正在编译的函数 模板 实例化“std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_buy<_Ty,_Alloc>::_Buynode<const cv::detail::GraphEdge&>(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,const cv::detail::GraphEdge &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(950): note: 参见对正在编译的函数 模板 实例化“std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_buy<_Ty,_Alloc>::_Buynode<const cv::detail::GraphEdge&>(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,const cv::detail::GraphEdge &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1192): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Insert<const cv::detail::GraphEdge&>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>,std::_Iterator_base0>,const cv::detail::GraphEdge &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1192): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Insert<const cv::detail::GraphEdge&>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>,std::_Iterator_base0>,const cv::detail::GraphEdge &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1311): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1265): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Insert_range<_Iter>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>,std::_Iterator_base0>,_Iter,_Iter,std::forward_iterator_tag)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1264): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Insert_range<_Iter>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>,std::_Iterator_base0>,_Iter,_Iter,std::forward_iterator_tag)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(800): note: 参见对正在编译的函数 模板 实例化“std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>> std::list<_Ty,std::allocator<_Ty>>::insert<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(800): note: 参见对正在编译的函数 模板 实例化“std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>> std::list<_Ty,std::allocator<_Ty>>::insert<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(796): note: 编译 类 模板 成员函数 "std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::list(const std::list<_Ty,std::allocator<_Ty>> &)" 时
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xmemory0(881): note: 参见对正在编译的函数 模板 实例化“std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::list(const std::list<_Ty,std::allocator<_Ty>> &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_wstdio.h(1530): warning C4710: “int swprintf_s(wchar_t *const ,const size_t,const wchar_t *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_wstdio.h(1530): note: 参见“swprintf_s”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_wstdio.h(1761): warning C4710: “int _scwprintf(const wchar_t *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_wstdio.h(1761): note: 参见“_scwprintf”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(828): warning C4710: “int fprintf(FILE *const ,const char *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(828): note: 参见“fprintf”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(948): warning C4710: “int printf(const char *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(948): note: 参见“printf”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(1774): warning C4710: “int sprintf(char *const ,const char *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(1774): note: 参见“sprintf”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(1833): warning C4710: “int sprintf_s(char *const ,const size_t,const char *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(1833): note: 参见“sprintf_s”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(2100): warning C4710: “int _scprintf(const char *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(2100): note: 参见“_scprintf”的声明
  FaceDetector.cpp
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\malloc.h(45): warning C4820: “_heapinfo”:“4”字节填充添加在 数据成员“_heapinfo::_useflag”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vcruntime_exception.h(25): warning C4820: “__std_exception_data”:“7”字节填充添加在 数据成员“__std_exception_data::_DoFree”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vcruntime_typeinfo.h(44): warning C4820: “__std_type_info_data”:“7”字节填充添加在 数据成员“__std_type_info_data::_DecoratedName”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo.h(60): warning C4820: “_Collvec”:“4”字节填充添加在 数据成员“_Collvec::_Page”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo.h(66): warning C4820: “_Ctypevec”:“4”字节填充添加在 数据成员“_Ctypevec::_Page”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo.h(68): warning C4820: “_Ctypevec”:“4”字节填充添加在 数据成员“_Ctypevec::_Delfl”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(4183): warning C4820: “std::_Yarn<char>”:“7”字节填充添加在 数据成员“std::_Yarn<char>::_Nul”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo(228): note: 参见对正在编译的 类 模板 实例化 "std::_Yarn<char>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo(228): warning C4820: “std::_Locinfo”:“4”字节填充添加在 数据成员“std::_Locinfo::_Lock”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(4183): warning C4820: “std::_Yarn<wchar_t>”:“6”字节填充添加在 数据成员“std::_Yarn<wchar_t>::_Nul”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocinfo(230): note: 参见对正在编译的 类 模板 实例化 "std::_Yarn<wchar_t>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(182): warning C4820: “std::locale::facet”:“4”字节填充添加在 数据成员“std::locale::facet::_Myrefs”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(247): warning C4820: “std::locale::_Locimp”:“3”字节填充添加在 数据成员“std::locale::_Locimp::_Xparent”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(488): warning C4820: “std::locale”:“7”字节填充添加在 基类“std::_Crt_new_delete”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(330): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(356): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(812): warning C4625: “std::codecvt_base”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(812): warning C4626: “std::codecvt_base”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1353): warning C4625: “std::codecvt<char16_t,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1353): warning C4626: “std::codecvt<char16_t,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1678): warning C4625: “std::codecvt<char32_t,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1678): warning C4626: “std::codecvt<char32_t,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1922): warning C4820: “std::codecvt<wchar_t,char,_Mbstatet>”:“4”字节填充添加在 数据成员“std::codecvt<wchar_t,char,_Mbstatet>::_Cvt”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1922): warning C4625: “std::codecvt<wchar_t,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(1922): warning C4626: “std::codecvt<wchar_t,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2171): warning C4820: “std::codecvt<unsigned short,char,_Mbstatet>”:“4”字节填充添加在 数据成员“std::codecvt<unsigned short,char,_Mbstatet>::_Cvt”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2171): warning C4625: “std::codecvt<unsigned short,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2171): warning C4626: “std::codecvt<unsigned short,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2219): warning C4625: “std::ctype_base”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2219): warning C4626: “std::ctype_base”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2721): warning C4625: “std::ctype<char>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2721): warning C4626: “std::ctype<char>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2962): warning C4820: “std::ctype<wchar_t>”:“4”字节填充添加在 数据成员“std::ctype<wchar_t>::_Cvt”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2962): warning C4625: “std::ctype<wchar_t>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(2962): warning C4626: “std::ctype<wchar_t>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3205): warning C4820: “std::ctype<unsigned short>”:“4”字节填充添加在 数据成员“std::ctype<unsigned short>::_Cvt”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3205): warning C4625: “std::ctype<unsigned short>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3205): warning C4626: “std::ctype<unsigned short>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3250): warning C4625: “std::ctype_byname<char>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3250): warning C4626: “std::ctype_byname<char>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(943): warning C4625: “std::codecvt<char,char,_Mbstatet>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(3255): note: 参见对正在编译的 类 模板 实例化 "std::codecvt<char,char,_Mbstatet>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocale(943): warning C4626: “std::codecvt<char,char,_Mbstatet>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(192): warning C4820: “std::error_code”:“4”字节填充添加在 数据成员“std::error_code::_Myval”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(262): warning C4820: “std::error_condition”:“4”字节填充添加在 数据成员“std::error_condition::_Myval”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(498): warning C4625: “std::_Generic_error_category”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(498): warning C5026: “std::_Generic_error_category”: 已将移动构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(498): warning C4626: “std::_Generic_error_category”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(498): warning C5027: “std::_Generic_error_category”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(526): warning C4625: “std::_Iostream_error_category”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(526): warning C5026: “std::_Iostream_error_category”: 已将移动构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(526): warning C4626: “std::_Iostream_error_category”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(526): warning C5027: “std::_Iostream_error_category”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(574): warning C4625: “std::_System_error_category”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(574): warning C5026: “std::_System_error_category”: 已将移动构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(574): warning C4626: “std::_System_error_category”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\system_error(574): warning C5027: “std::_System_error_category”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xiosbase(589): warning C4820: “std::ios_base::_Fnarray”:“4”字节填充添加在 数据成员“std::ios_base::_Fnarray::_Index”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xiosbase(642): warning C4820: “std::ios_base”:“4”字节填充添加在 数据成员“std::ios_base::_Fmtfl”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(263): warning C4820: “std::numpunct<char>”:“6”字节填充添加在 数据成员“std::numpunct<char>::_Kseparator”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1848): note: 参见对正在编译的 类 模板 实例化 "std::numpunct<char>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(265): warning C4625: “std::numpunct<char>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(265): warning C4626: “std::numpunct<char>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1394): warning C4625: “std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1850): note: 参见对正在编译的 类 模板 实例化 "std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1394): warning C4626: “std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1833): warning C4625: “std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1852): note: 参见对正在编译的 类 模板 实例化 "std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1833): warning C4626: “std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(263): warning C4820: “std::numpunct<wchar_t>”:“4”字节填充添加在 数据成员“std::numpunct<wchar_t>::_Kseparator”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1854): note: 参见对正在编译的 类 模板 实例化 "std::numpunct<wchar_t>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(265): warning C4625: “std::numpunct<wchar_t>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(265): warning C4626: “std::numpunct<wchar_t>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1394): warning C4625: “std::num_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1856): note: 参见对正在编译的 类 模板 实例化 "std::num_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1394): warning C4626: “std::num_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1833): warning C4625: “std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1858): note: 参见对正在编译的 类 模板 实例化 "std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1833): warning C4626: “std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ios(188): warning C4820: “std::basic_ios<char,std::char_traits<char>>”:“7”字节填充添加在 数据成员“std::basic_ios<char,std::char_traits<char>>::_Fillch”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ios(194): note: 参见对正在编译的 类 模板 实例化 "std::basic_ios<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ios(188): warning C4820: “std::basic_ios<wchar_t,std::char_traits<wchar_t>>”:“6”字节填充添加在 数据成员“std::basic_ios<wchar_t,std::char_traits<wchar_t>>::_Fillch”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ios(196): note: 参见对正在编译的 类 模板 实例化 "std::basic_ios<wchar_t,std::char_traits<wchar_t>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(629): warning C4820: “std::basic_ostream<char,std::char_traits<char>>”:“4”字节填充添加在 数据成员“std::basic_ostream<char,std::char_traits<char>>::{vbptr}”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(687): note: 参见对正在编译的 类 模板 实例化 "std::basic_ostream<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(629): warning C4820: “std::basic_ostream<wchar_t,std::char_traits<wchar_t>>”:“4”字节填充添加在 数据成员“std::basic_ostream<wchar_t,std::char_traits<wchar_t>>::{vbptr}”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(689): note: 参见对正在编译的 类 模板 实例化 "std::basic_ostream<wchar_t,std::char_traits<wchar_t>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(743): warning C4820: “std::basic_istream<char,std::char_traits<char>>”:“4”字节填充添加在 数据成员“std::basic_istream<char,std::char_traits<char>>::_Chcount”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(773): note: 参见对正在编译的 类 模板 实例化 "std::basic_istream<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(743): warning C4820: “std::basic_istream<wchar_t,std::char_traits<wchar_t>>”:“4”字节填充添加在 数据成员“std::basic_istream<wchar_t,std::char_traits<wchar_t>>::_Chcount”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(774): note: 参见对正在编译的 类 模板 实例化 "std::basic_istream<wchar_t,std::char_traits<wchar_t>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(834): warning C4820: “std::basic_iostream<char,std::char_traits<char>>”:“4”字节填充添加在 基类“std::basic_ostream<char,std::char_traits<char>>”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(839): note: 参见对正在编译的 类 模板 实例化 "std::basic_iostream<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(834): warning C4820: “std::basic_iostream<wchar_t,std::char_traits<wchar_t>>”:“4”字节填充添加在 基类“std::basic_ostream<wchar_t,std::char_traits<wchar_t>>”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\istream(840): note: 参见对正在编译的 类 模板 实例化 "std::basic_iostream<wchar_t,std::char_traits<wchar_t>>" 的引用
J:\opencv4.0.1\opencv\build\include\opencv2/core/cvdef.h(808): warning C4365: “初始化”: 从“int”转换到“unsigned int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cvdef.h(809): warning C4365: “初始化”: 从“int”转换到“unsigned int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cvdef.h(810): warning C4365: “初始化”: 从“int”转换到“unsigned int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/types.hpp(2419): warning C4946: reinterpret_cast 在相关类之间使用: “cv::Matx<double,4,1>”和“cv::Scalar_<double>”
  J:\opencv4.0.1\opencv\build\include\opencv2/core/matx.hpp(226): note: 参见“cv::Matx<double,4,1>”的声明
  J:\opencv4.0.1\opencv\build\include\opencv2/core/types.hpp(669): note: 参见“cv::Scalar_<double>”的声明
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(256): warning C4820: “cv::_InputArray”:“4”字节填充添加在 数据成员“cv::_InputArray::flags”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(560): warning C4820: “cv::UMatData”:“4”字节填充添加在 数据成员“cv::UMatData::flags”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(2569): warning C4820: “cv::UMat”:“4”字节填充添加在 数据成员“cv::UMat::usageFlags”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(2678): warning C4820: “cv::SparseMat::Hdr”:“4”字节填充添加在 数据成员“cv::SparseMat::Hdr::valueOffset”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(2922): warning C4820: “cv::SparseMat”:“4”字节填充添加在 数据成员“cv::SparseMat::flags”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(3414): warning C4820: “cv::NAryMatIterator”:“4”字节填充添加在 数据成员“cv::NAryMatIterator::narrays”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(3419): warning C4820: “cv::NAryMatIterator”:“4”字节填充添加在 数据成员“cv::NAryMatIterator::iterdepth”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.hpp(3545): warning C4820: “cv::MatExpr”:“4”字节填充添加在 数据成员“cv::MatExpr::flags”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(2571): warning C4626: “std::_Vb_val<_Alloc>”: 已将对齐运算符隐式定义为“已删除”
          with
          [
              _Alloc=std::allocator<bool>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(2577): note: 参见对正在编译的 类 模板 实例化 "std::_Vb_val<_Alloc>" 的引用
          with
          [
              _Alloc=std::allocator<bool>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(107): note: 参见对正在编译的 类 模板 实例化 "std::vector<bool,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=bool
          ]
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(550): warning C4365: “初始化”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(579): warning C4365: “初始化”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(915): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(2185): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(2191): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(2675): warning C4365: “初始化”: 从“size_t”转换到“ptrdiff_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(3830): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/persistence.hpp(454): warning C4820: “cv::FileStorage”:“4”字节填充添加在 数据成员“cv::FileStorage::state”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/persistence.hpp(1320): warning C4365: “return”: 从“size_t”转换到“ptrdiff_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core.hpp(134): warning C4820: “cv::Exception”:“4”字节填充添加在 数据成员“cv::Exception::code”后
J:\opencv4.0.1\opencv\build\include\opencv2/core.hpp(138): warning C4820: “cv::Exception”:“4”字节填充添加在 数据成员“cv::Exception::line”后
J:\opencv4.0.1\opencv\build\include\opencv2/core.hpp(2606): warning C4820: “cv::LDA”:“4”字节填充添加在 数据成员“cv::LDA::_num_components”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/operations.hpp(367): warning C4365: “参数”: 从“unsigned int”转换到“int”，有符号/无符号不匹配
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\time.h(36): warning C4820: “_timespec64”:“4”字节填充添加在 数据成员“_timespec64::tv_nsec”后
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\time.h(43): warning C4820: “timespec”:“4”字节填充添加在 数据成员“timespec::tv_nsec”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthrcommon.h(28): warning C4820: “<anonymous-tag>”:“4”字节填充添加在 数据成员“<anonymous-tag>::_Id”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xtimec.h(22): warning C4820: “xtime”:“4”字节填充添加在 数据成员“xtime::nsec”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthread(51): warning C5039: “_Thrd_start”: 可能引发函数的指针或引用传递到 -EHc 下的外部 C 函数。如果该函数引发异常，未定义行为可能发生。
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthread(137): warning C4820: “std::_Auto_cnd”:“7”字节填充添加在 数据成员“std::_Auto_cnd::_Active”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthread(161): warning C4820: “std::_Auto_mtx”:“7”字节填充添加在 数据成员“std::_Auto_mtx::_Active”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\thr/xthread(215): warning C4820: “std::_Pad”:“7”字节填充添加在 数据成员“std::_Pad::_Started”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(313): warning C4820: “std::unique_lock<std::mutex>”:“7”字节填充添加在 数据成员“std::unique_lock<std::mutex>::_Owns”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(713): note: 参见对正在编译的 类 模板 实例化 "std::unique_lock<std::mutex>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(836): warning C4623: “std::_UInt_is_zero”: 已将默认构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(836): warning C4626: “std::_UInt_is_zero”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(836): warning C5027: “std::_UInt_is_zero”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\mutex(915): warning C4820: “std::timed_mutex”:“4”字节填充添加在 数据成员“std::timed_mutex::_My_locked”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(514): warning C4365: “return”: 从“unsigned int”转换到“int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(531): warning C4365: “return”: 从“unsigned int”转换到“int”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(720): warning C4820: “cv::TLSDataContainer”:“4”字节填充添加在 数据成员“cv::TLSDataContainer::key_”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(1201): warning C4820: “cv::instr::NodeData”:“4”字节填充添加在 数据成员“cv::instr::NodeData::m_lineNum”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(1205): warning C4820: “cv::instr::NodeData”:“2”字节填充添加在 数据成员“cv::instr::NodeData::m_funError”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(1213): warning C4820: “cv::instr::NodeData”:“4”字节填充添加在 数据成员“cv::instr::NodeData::m_threads”后
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(101): warning C4625: “cv::flann::KDTreeIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(101): warning C5026: “cv::flann::KDTreeIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(101): warning C4626: “cv::flann::KDTreeIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(101): warning C5027: “cv::flann::KDTreeIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(106): warning C4625: “cv::flann::LinearIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(106): warning C5026: “cv::flann::LinearIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(106): warning C4626: “cv::flann::LinearIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(106): warning C5027: “cv::flann::LinearIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(112): warning C4625: “cv::flann::CompositeIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(112): warning C5026: “cv::flann::CompositeIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(112): warning C4626: “cv::flann::CompositeIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(112): warning C5027: “cv::flann::CompositeIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(118): warning C4625: “cv::flann::AutotunedIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(118): warning C5026: “cv::flann::AutotunedIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(118): warning C4626: “cv::flann::AutotunedIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(118): warning C5027: “cv::flann::AutotunedIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(124): warning C4625: “cv::flann::HierarchicalClusteringIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(124): warning C5026: “cv::flann::HierarchicalClusteringIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(124): warning C4626: “cv::flann::HierarchicalClusteringIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(124): warning C5027: “cv::flann::HierarchicalClusteringIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(130): warning C4625: “cv::flann::KMeansIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(130): warning C5026: “cv::flann::KMeansIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(130): warning C4626: “cv::flann::KMeansIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(130): warning C5027: “cv::flann::KMeansIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(135): warning C4625: “cv::flann::LshIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(135): warning C5026: “cv::flann::LshIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(135): warning C4626: “cv::flann::LshIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(135): warning C5027: “cv::flann::LshIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(140): warning C4625: “cv::flann::SavedIndexParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(140): warning C5026: “cv::flann::SavedIndexParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(140): warning C4626: “cv::flann::SavedIndexParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(140): warning C5027: “cv::flann::SavedIndexParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(145): warning C4625: “cv::flann::SearchParams”: 已将复制构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(145): warning C5026: “cv::flann::SearchParams”: 已将移动构造函数隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(145): warning C4626: “cv::flann::SearchParams”: 已将对齐运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(145): warning C5027: “cv::flann::SearchParams”: 已将移动赋值运算符隐式定义为“已删除”
J:\opencv4.0.1\opencv\build\include\opencv2/flann/miniflann.hpp(172): warning C4820: “cv::flann::Index”:“4”字节填充添加在 数据成员“cv::flann::Index::featureType”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(226): warning C4820: “cv::Feature2D”:“4”字节填充添加在 数据成员“cv::Feature2D::{vbptr}”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(300): warning C4820: “cv::BRISK”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(376): warning C4820: “cv::ORB”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(436): warning C4820: “cv::MSER”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(471): warning C4820: “cv::FastFeatureDetector”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(531): warning C4820: “cv::AgastFeatureDetector”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(585): warning C4820: “cv::GFTTDetector”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(627): warning C4820: “cv::SimpleBlobDetector::Params”:“4”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::maxThreshold”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(634): warning C4820: “cv::SimpleBlobDetector::Params”:“1”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::filterByArea”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(637): warning C4820: “cv::SimpleBlobDetector::Params”:“3”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::filterByCircularity”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(640): warning C4820: “cv::SimpleBlobDetector::Params”:“3”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::filterByInertia”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(643): warning C4820: “cv::SimpleBlobDetector::Params”:“3”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::filterByConvexity”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(647): warning C4820: “cv::SimpleBlobDetector::Params”:“4”字节填充添加在 数据成员“cv::SimpleBlobDetector::Params::maxConvexity”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(652): warning C4820: “cv::SimpleBlobDetector”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(709): warning C4820: “cv::KAZE”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(777): warning C4820: “cv::AKAZE”:“4”字节填充添加在 基类“cv::Feature2D”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(1141): warning C4820: “cv::BFMatcher”:“3”字节填充添加在 数据成员“cv::BFMatcher::crossCheck”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(1188): warning C4820: “cv::FlannBasedMatcher”:“4”字节填充添加在 数据成员“cv::FlannBasedMatcher::addedDescCount”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(1341): warning C4820: “cv::BOWTrainer”:“4”字节填充添加在 数据成员“cv::BOWTrainer::size”后
J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(1363): warning C4820: “cv::BOWKMeansTrainer”:“4”字节填充添加在 数据成员“cv::BOWKMeansTrainer::clusterCount”后
J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.hpp(48): warning C4464: 相对包含路径包括 ".."
J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dict.hpp(107): warning C4820: “cv::dnn::dnn4_v20181221::DictValue”:“4”字节填充添加在 数据成员“cv::dnn::dnn4_v20181221::DictValue::type”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(2360): warning C4625: “std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(82): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dict.hpp(117): note: 参见对正在编译的 类 模板 实例化 "std::map<cv::String,cv::dnn::dnn4_v20181221::DictValue,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue
          ]
J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.hpp(120): warning C4820: “cv::dnn::dnn4_v20181221::BackendNode”:“4”字节填充添加在 数据成员“cv::dnn::dnn4_v20181221::BackendNode::backendId”后
J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.hpp(354): warning C4820: “cv::dnn::dnn4_v20181221::Layer”:“4”字节填充添加在 数据成员“cv::dnn::dnn4_v20181221::Layer::preferableTarget”后
j:\opencv4.0.1\opencv\build\include\opencv2\flann\matrix.h(110): warning C4820: “cvflann::UntypedMatrix”:“4”字节填充添加在 数据成员“cvflann::UntypedMatrix::type”后
j:\opencv4.0.1\opencv\build\include\opencv2\flann\matrix.h(97): warning C4365: “初始化”: 从“long”转换到“size_t”，有符号/无符号不匹配
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(2360): warning C4625: “std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(82): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(45): note: 参见对正在编译的 类 模板 实例化 "std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
j:\opencv4.0.1\opencv\build\include\opencv2\flann\dist.h(444): warning C4668: 没有将“__GNUC__”定义为预处理器宏，用“0”替换“#if/#elif”
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(83): warning C4820: “cvflann::PooledAllocator”:“4”字节填充添加在 数据成员“cvflann::PooledAllocator::remaining”后
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(188): warning C4820: “cvflann::PooledAllocator”:“4”字节填充添加在 数据成员“cvflann::PooledAllocator::wastedMemory”后
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(132): warning C4365: “=”: 从“unsigned __int64”转换到“int”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(143): warning C4365: “=”: 从“size_t”转换到“int”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(146): warning C4365: “参数”: 从“int”转换到“size_t”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\allocator.h(159): warning C4365: “=”: 从“size_t”转换到“int”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\random.h(123): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\random.h(125): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\random.h(148): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
j:\opencv4.0.1\opencv\build\include\opencv2\flann\logger.h(131): warning C4820: “cvflann::Logger”:“4”字节填充添加在 数据成员“cvflann::Logger::logLevel”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(34): warning C4625: “std::money_base”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(34): warning C5026: “std::money_base”: 已将移动构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(34): warning C4626: “std::money_base”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(34): warning C5027: “std::money_base”: 已将移动赋值运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(260): warning C4820: “std::_Mpunct<_Elem>”:“6”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_Kseparator”后
          with
          [
              _Elem=char
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(276): note: 参见对正在编译的 类 模板 实例化 "std::_Mpunct<_Elem>" 的引用
          with
          [
              _Elem=char
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1017): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<char,true>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(268): warning C4820: “std::_Mpunct<_Elem>”:“3”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_International”后
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4820: “std::_Mpunct<_Elem>”:“4”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_Cvt”后
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4625: “std::_Mpunct<_Elem>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4626: “std::_Mpunct<_Elem>”: 已将对齐运算符隐式定义为“已删除”
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4625: “std::moneypunct<char,true>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4626: “std::moneypunct<char,true>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4625: “std::moneypunct<char,false>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1018): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<char,false>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4626: “std::moneypunct<char,false>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(694): warning C4625: “std::money_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1025): note: 参见对正在编译的 类 模板 实例化 "std::money_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(694): warning C4626: “std::money_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1002): warning C4625: “std::money_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1028): note: 参见对正在编译的 类 模板 实例化 "std::money_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1002): warning C4626: “std::money_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(260): warning C4820: “std::_Mpunct<_Elem>”:“4”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_Kseparator”后
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(276): note: 参见对正在编译的 类 模板 实例化 "std::_Mpunct<_Elem>" 的引用
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1030): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<wchar_t,true>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(268): warning C4820: “std::_Mpunct<_Elem>”:“3”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_International”后
          with
          [
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4820: “std::_Mpunct<_Elem>”:“4”字节填充添加在 数据成员“std::_Mpunct<_Elem>::_Cvt”后
          with
          [
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4625: “std::_Mpunct<_Elem>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(269): warning C4626: “std::_Mpunct<_Elem>”: 已将对齐运算符隐式定义为“已删除”
          with
          [
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4625: “std::moneypunct<wchar_t,true>”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4626: “std::moneypunct<wchar_t,true>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4625: “std::moneypunct<wchar_t,false>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1031): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<wchar_t,false>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(309): warning C4626: “std::moneypunct<wchar_t,false>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(694): warning C4625: “std::money_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1038): note: 参见对正在编译的 类 模板 实例化 "std::money_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(694): warning C4626: “std::money_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1002): warning C4625: “std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1041): note: 参见对正在编译的 类 模板 实例化 "std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1002): warning C4626: “std::money_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(33): warning C4625: “std::time_base”: 已将复制构造函数隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(33): warning C4626: “std::time_base”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(732): warning C4625: “std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1258): note: 参见对正在编译的 类 模板 实例化 "std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(732): warning C4626: “std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(902): warning C4625: “std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1260): note: 参见对正在编译的 类 模板 实例化 "std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(902): warning C4626: “std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(732): warning C4625: “std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1265): note: 参见对正在编译的 类 模板 实例化 "std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(732): warning C4626: “std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1056): warning C4625: “std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将复制构造函数隐式定义为“已删除”
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1267): note: 参见对正在编译的 类 模板 实例化 "std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1056): warning C4626: “std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>”: 已将对齐运算符隐式定义为“已删除”
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\iomanip(513): warning C4820: “std::_Smanip<std::ios_base::fmtflags>”:“4”字节填充添加在 数据成员“std::_Smanip<std::ios_base::fmtflags>::_Manarg”后
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(104): note: 参见对正在编译的 类 模板 实例化 "std::_Smanip<std::ios_base::fmtflags>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(2360): warning C4625: “std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket,
              _Pr=std::less<cvflann::lsh::BucketKey>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(82): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket,
              _Pr=std::less<cvflann::lsh::BucketKey>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(322): note: 参见对正在编译的 类 模板 实例化 "std::map<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(343): note: 参见对正在编译的 类 模板 实例化 "cvflann::lsh::LshTable<ElementType>" 的引用
j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(330): warning C4820: “cvflann::lsh::LshTable<unsigned char>”:“4”字节填充添加在 数据成员“cvflann::lsh::LshTable<unsigned char>::speed_level_”后
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(349): note: 参见对正在编译的 类 模板 实例化 "cvflann::lsh::LshTable<unsigned char>" 的引用
j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(367): warning C4365: “初始化”: 从“_Ty”转换到“size_t”，有符号/无符号不匹配
          with
          [
              _Ty=int
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\utility(320): warning C4820: “std::pair<const _Kty,_Ty>”:“4”字节填充添加在 数据成员“std::pair<const _Kty,_Ty>::first”后
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(460): note: 参见对正在编译的 类 模板 实例化 "std::pair<const _Kty,_Ty>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket
          ]
J:\opencv4.0.1\opencv\build\include\opencv2/highgui.hpp(692): warning C4820: “cv::QtFont”:“4”字节填充添加在 数据成员“cv::QtFont::font_face”后
J:\opencv4.0.1\opencv\build\include\opencv2/imgproc.hpp(1239): warning C4820: “cv::Subdiv2D”:“3”字节填充添加在 数据成员“cv::Subdiv2D::validGeometry”后
J:\opencv4.0.1\opencv\build\include\opencv2/ml.hpp(1174): warning C4820: “cv::ml::DTrees::Split”:“3”字节填充添加在 数据成员“cv::ml::DTrees::Split::inversed”后
J:\opencv4.0.1\opencv\build\include\opencv2/objdetect.hpp(611): warning C4820: “cv::HOGDescriptor”:“4”字节填充添加在 数据成员“cv::HOGDescriptor::histogramNormType”后
J:\opencv4.0.1\opencv\build\include\opencv2/objdetect.hpp(617): warning C4820: “cv::HOGDescriptor”:“7”字节填充添加在 数据成员“cv::HOGDescriptor::gammaCorrection”后
J:\opencv4.0.1\opencv\build\include\opencv2/objdetect.hpp(668): warning C4820: “cv::HOGDescriptor”:“7”字节填充添加在 数据成员“cv::HOGDescriptor::signedGradient”后
J:\opencv4.0.1\opencv\build\include\opencv2/objdetect/detection_based_tracker.hpp(202): warning C4820: “cv::DetectionBasedTracker::TrackedObject”:“4”字节填充添加在 数据成员“cv::DetectionBasedTracker::TrackedObject::id”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.hpp(323): warning C4820: “cv::cuda::GpuMat”:“4”字节填充添加在 数据成员“cv::cuda::GpuMat::cols”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.hpp(588): warning C4820: “cv::cuda::HostMem”:“4”字节填充添加在 数据成员“cv::cuda::HostMem::cols”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.hpp(597): warning C4820: “cv::cuda::HostMem”:“4”字节填充添加在 数据成员“cv::cuda::HostMem::alloc_type”后
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.inl.hpp(301): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.inl.hpp(307): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.inl.hpp(482): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/core/cuda.inl.hpp(488): warning C4365: “return”: 从“int”转换到“size_t”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(233): warning C4266: “cv::Rect cv::detail::PlaneWarper::buildMaps(cv::Size,cv::InputArray,cv::InputArray,cv::InputArray,cv::OutputArray,cv::OutputArray)”: 不重写基“cv::detail::PlaneWarper”中的虚拟成员函数；函数被隐藏
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(192): note: 参见“cv::detail::PlaneWarper::buildMaps”的声明
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(180): note: 参见“cv::detail::PlaneWarper”的声明
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(233): warning C4266: “cv::Point cv::detail::PlaneWarper::warp(cv::InputArray,cv::InputArray,cv::InputArray,cv::InputArray,int,int,cv::OutputArray)”: 不重写基“cv::detail::PlaneWarper”中的虚拟成员函数；函数被隐藏
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(197): note: 参见“cv::detail::PlaneWarper::warp”的声明
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/warpers.hpp(180): note: 参见“cv::detail::PlaneWarper”的声明
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(62): warning C4820: “cv::detail::ImageFeatures”:“4”字节填充添加在 数据成员“cv::detail::ImageFeatures::img_size”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(110): warning C4820: “cv::detail::MatchesInfo”:“4”字节填充添加在 数据成员“cv::detail::MatchesInfo::num_inliers”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(165): warning C4820: “cv::detail::FeaturesMatcher”:“7”字节填充添加在 数据成员“cv::detail::FeaturesMatcher::is_thread_safe_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(211): warning C4820: “cv::detail::BestOf2NearestRangeMatcher”:“4”字节填充添加在 数据成员“cv::detail::BestOf2NearestRangeMatcher::range_width_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/matchers.hpp(246): warning C4820: “cv::detail::AffineBestOf2NearestMatcher”:“7”字节填充添加在 数据成员“cv::detail::AffineBestOf2NearestMatcher::full_affine_”后
j:\opencv4.0.1\opencv\build\include\opencv2\stitching\detail\util.hpp(89): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/motion_estimators.hpp(112): warning C4820: “cv::detail::HomographyBasedEstimator”:“7”字节填充添加在 数据成员“cv::detail::HomographyBasedEstimator::is_focals_estimated_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/exposure_compensate.hpp(93): warning C4820: “cv::detail::ExposureCompensator”:“7”字节填充添加在 数据成员“cv::detail::ExposureCompensator::updateGain”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/seam_finders.hpp(216): warning C4820: “cv::detail::DpSeamFinder”:“4”字节填充添加在 数据成员“cv::detail::DpSeamFinder::unionSize_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/seam_finders.hpp(223): warning C4820: “cv::detail::DpSeamFinder”:“4”字节填充添加在 数据成员“cv::detail::DpSeamFinder::ncomps_”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(2360): warning C4625: “std::_Tree<std::_Tset_traits<_Kty,_Pr,_Alloc,false>>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Kty=std::pair<int,int>,
              _Pr=std::less<std::pair<int,int>>,
              _Alloc=std::allocator<std::pair<int,int>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\set(55): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tset_traits<_Kty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=std::pair<int,int>,
              _Pr=std::less<std::pair<int,int>>,
              _Alloc=std::allocator<std::pair<int,int>>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/seam_finders.hpp(227): note: 参见对正在编译的 类 模板 实例化 "std::set<std::pair<int,int>,std::less<_Kty>,std::allocator<_Ty>>" 的引用
          with
          [
              _Kty=std::pair<int,int>,
              _Ty=std::pair<int,int>
          ]
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/blenders.hpp(119): warning C4820: “cv::detail::FeatherBlender”:“4”字节填充添加在 数据成员“cv::detail::FeatherBlender::sharpness_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching/detail/blenders.hpp(145): warning C4820: “cv::detail::MultiBandBlender”:“3”字节填充添加在 数据成员“cv::detail::MultiBandBlender::can_use_gpu_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching.hpp(296): warning C4820: “cv::Stitcher”:“4”字节填充添加在 数据成员“cv::Stitcher::interp_flags_”后
J:\opencv4.0.1\opencv\build\include\opencv2/stitching.hpp(302): warning C4820: “cv::Stitcher”:“3”字节填充添加在 数据成员“cv::Stitcher::do_wave_correct_”后
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\um\winbase.h(7417): warning C5039: “TpSetCallbackCleanupGroup”: 可能引发函数的指针或引用传递到 -EHc 下的外部 C 函数。如果该函数引发异常，未定义行为可能发生。
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\platform.h(72): warning C4626: “ncnn::MutexLockGuard”: 已将对齐运算符隐式定义为“已删除”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\platform.h(105): warning C5039: “_beginthreadex”: 可能引发函数的指针或引用传递到 -EHc 下的外部 C 函数。如果该函数引发异常，未定义行为可能发生。
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\blob.h(38): warning C4820: “ncnn::Blob”:“4”字节填充添加在 数据成员“ncnn::Blob::producer”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(21): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\allocator.h(150): warning C4820: “ncnn::PoolAllocator”:“4”字节填充添加在 数据成员“ncnn::PoolAllocator::size_compare_ratio”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\allocator.h(172): warning C4820: “ncnn::UnlockedPoolAllocator”:“4”字节填充添加在 数据成员“ncnn::UnlockedPoolAllocator::size_compare_ratio”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(77): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(202): warning C4820: “ncnn::Mat”:“4”字节填充添加在 数据成员“ncnn::Mat::elempack”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(430): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(436): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(448): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(454): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(499): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(506): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(553): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(560): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(602): warning C4668: 没有将“__ARM_NEON”定义为预处理器宏，用“0”替换“#if/#elif”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(626): warning C4458: “allocator”的声明隐藏了类成员
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(202): note: 参见“ncnn::Mat::allocator”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(675): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(708): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(771): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(801): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(861): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(891): warning C4365: “=”: 从“int”转换到“size_t”，有符号/无符号不匹配
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(53): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(39): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(53): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(37): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(66): warning C4626: “ncnn::ModelBinFromMemory”: 已将对齐运算符隐式定义为“已删除”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(66): warning C5027: “ncnn::ModelBinFromMemory”: 已将移动赋值运算符隐式定义为“已删除”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(66): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(39): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(66): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(37): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(78): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(39): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(78): warning C4266: “ncnn::Mat ncnn::ModelBin::load(int,int,int) const”: 不重写基“ncnn::ModelBin”中的虚拟成员函数；函数被隐藏
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(37): note: 参见“ncnn::ModelBin::load”的声明
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\modelbin.h(25): note: 参见“ncnn::ModelBin”的声明
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\option.h(41): warning C4820: “ncnn::Option”:“3”字节填充添加在 数据成员“ncnn::Option::lightmode”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\option.h(90): warning C4820: “ncnn::Option”:“6”字节填充添加在 数据成员“ncnn::Option::use_packing_layout”后
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\FaceDetector.h(28): warning C4244: “初始化”: 从“_Rep”转换到“double”，可能丢失数据
          with
          [
              _Rep=__int64
          ]
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\FaceDetector.h(91): warning C4820: “Detector”:“4”字节填充添加在 数据成员“Detector::_mean_val”后
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(10): warning C4305: “初始化”: 从“double”到“float”截断
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(26): warning C4305: “初始化”: 从“double”到“float”截断
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(72): warning C4388: “<”: 有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(76): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(81): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(82): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(83): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(84): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(94): warning C4244: “=”: 从“int”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(97): warning C4244: “=”: 从“int”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(103): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(104): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(118): warning C4388: “<”: 有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(120): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(131): warning C4305: “=”: 从“double”到“float”截断
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(132): warning C4305: “=”: 从“double”到“float”截断
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(144): warning C4458: “anchor”的声明隐藏了类成员
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\FaceDetector.h(91): note: 参见“Detector::anchor”的声明
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(150): warning C4388: “<”: 有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(151): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(151): warning C4244: “参数”: 从“float”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(152): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(152): warning C4244: “参数”: 从“float”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(164): warning C4388: “<”: 有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(166): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(167): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(169): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(171): warning C4388: “<”: 有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(173): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(173): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(174): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(174): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(175): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(176): warning C4244: “初始化”: 从“double”转换到“float”，可能丢失数据
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(192): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(193): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(199): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(200): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(201): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(202): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(206): warning C4365: “参数”: 从“int”转换到“const unsigned __int64”，有符号/无符号不匹配
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(739): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(732): note: 编译 类 模板 成员函数 "std::vector<cv::detail::CameraParams,std::allocator<_Ty>>::vector(const std::vector<_Ty,std::allocator<_Ty>> &)" 时
          with
          [
              _Ty=cv::detail::CameraParams
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching.hpp(284): note: 参见对正在编译的函数 模板 实例化“std::vector<cv::detail::CameraParams,std::allocator<_Ty>>::vector(const std::vector<_Ty,std::allocator<_Ty>> &)”的引用
          with
          [
              _Ty=cv::detail::CameraParams
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/stitching.hpp(315): note: 参见对正在编译的 类 模板 实例化 "std::vector<cv::detail::CameraParams,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=cv::detail::CameraParams
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(710): warning C4820: “std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>”:“7”字节填充添加在 数据成员“std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Failed”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1031): note: 参见对正在编译的 类 模板 实例化 "std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1031): note: 编译 类 模板 成员函数 "_OutIt std::time_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,std::time_put<wchar_t,_OutIt>::_Elem,const tm *,char,char) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1267): note: 参见对正在编译的 类 模板 实例化 "std::time_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(631): warning C4820: “std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>”:“1”字节填充添加在 数据成员“std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Got”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(476): note: 参见对正在编译的 类 模板 实例化 "std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(476): note: 编译 类 模板 成员函数 "_InIt std::time_get<wchar_t,_InIt>::do_get(_InIt,_InIt,std::ios_base &,std::ios_base::iostate &,tm *,char,char) const" 时
          with
          [
              _InIt=std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1265): note: 参见对正在编译的 类 模板 实例化 "std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(632): warning C4820: “std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>”:“4”字节填充添加在 数据成员“std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Val”后
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(549): warning C4820: “std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Istreambuf_proxy”:“6”字节填充添加在 数据成员“std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Istreambuf_proxy::_Keep”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(486): note: 参见对正在编译的 类 模板 实例化 "std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t>>::_Istreambuf_proxy" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(710): warning C4820: “std::ostreambuf_iterator<char,std::char_traits<char>>”:“7”字节填充添加在 数据成员“std::ostreambuf_iterator<char,std::char_traits<char>>::_Failed”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(875): note: 参见对正在编译的 类 模板 实例化 "std::ostreambuf_iterator<char,std::char_traits<char>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(875): note: 编译 类 模板 成员函数 "_OutIt std::time_put<char,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,const tm *,char,char) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<char,std::char_traits<char>>,
              _Elem=char
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1260): note: 参见对正在编译的 类 模板 实例化 "std::time_put<char,std::ostreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(632): warning C4820: “std::istreambuf_iterator<char,std::char_traits<char>>”:“6”字节填充添加在 数据成员“std::istreambuf_iterator<char,std::char_traits<char>>::_Val”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(476): note: 参见对正在编译的 类 模板 实例化 "std::istreambuf_iterator<char,std::char_traits<char>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(476): note: 编译 类 模板 成员函数 "_InIt std::time_get<char,_InIt>::do_get(_InIt,_InIt,std::ios_base &,std::ios_base::iostate &,tm *,char,char) const" 时
          with
          [
              _InIt=std::istreambuf_iterator<char,std::char_traits<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(1258): note: 参见对正在编译的 类 模板 实例化 "std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\streambuf(549): warning C4820: “std::istreambuf_iterator<char,std::char_traits<char>>::_Istreambuf_proxy”:“7”字节填充添加在 数据成员“std::istreambuf_iterator<char,std::char_traits<char>>::_Istreambuf_proxy::_Keep”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xloctime(486): note: 参见对正在编译的 类 模板 实例化 "std::istreambuf_iterator<char,std::char_traits<char>>::_Istreambuf_proxy" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\utility(321): warning C4820: “std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool>”:“7”字节填充添加在 数据成员“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool>::second”后
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(199): note: 参见对正在编译的 类 模板 实例化 "std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(198): note: 编译 类 模板 成员函数 "cvflann::any &std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)" 时
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(49): note: 参见对正在编译的函数 模板 实例化“cvflann::any &std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)”的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(45): note: 参见对正在编译的 类 模板 实例化 "std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(666): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(659): note: 编译 类 模板 成员函数 "std::vector<std::vector<int,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>::vector(const unsigned __int64,const _Alloc &)" 时
          with
          [
              _Ty=int,
              _Alloc=std::allocator<std::vector<int,std::allocator<int>>>
          ]
  D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(148): note: 参见对正在编译的函数 模板 实例化“std::vector<std::vector<int,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>::vector(const unsigned __int64,const _Alloc &)”的引用
          with
          [
              _Ty=int,
              _Alloc=std::allocator<std::vector<int,std::allocator<int>>>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/features2d.hpp(1429): note: 参见对正在编译的 类 模板 实例化 "std::vector<std::vector<int,std::allocator<_Ty>>,std::allocator<std::vector<_Ty,std::allocator<_Ty>>>>" 的引用
          with
          [
              _Ty=int
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(680): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(673): note: 编译 类 模板 成员函数 "std::vector<std::_Vbase,std::allocator<std::_Vbase>>::vector(const unsigned __int64,const _Ty &,const _Alloc &)" 时
          with
          [
              _Ty=std::_Vbase,
              _Alloc=std::allocator<std::_Vbase>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(490): note: 参见对正在编译的函数 模板 实例化“std::vector<std::_Vbase,std::allocator<std::_Vbase>>::vector(const unsigned __int64,const _Ty &,const _Alloc &)”的引用
          with
          [
              _Ty=std::_Vbase,
              _Alloc=std::allocator<std::_Vbase>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\type_traits(1049): note: 参见对正在编译的 类 模板 实例化 "std::vector<std::_Vbase,std::allocator<std::_Vbase>>" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(2472): note: 查看指向正在编译的变量模板“const bool is_nothrow_default_constructible_v<std::vector<unsigned int,std::allocator<unsigned int> > >”的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(2577): note: 参见对正在编译的 类 模板 实例化 "std::_Vb_val<_Alloc>" 的引用
          with
          [
              _Alloc=std::allocator<bool>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/core/mat.inl.hpp(107): note: 参见对正在编译的 类 模板 实例化 "std::vector<bool,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=bool
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1616): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1616): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1616): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1599): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,long double) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1858): note: 参见对正在编译的 类 模板 实例化 "std::num_put<wchar_t,std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1592): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1592): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1592): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1575): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,double) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1569): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1569): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1569): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1565): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,unsigned __int64) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1559): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1559): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1559): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1555): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,__int64) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1549): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1549): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1549): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1545): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,unsigned long) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1539): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1539): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1539): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1535): note: 编译 类 模板 成员函数 "_OutIt std::num_put<wchar_t,_OutIt>::do_put(_OutIt,std::ios_base &,_Elem,long) const" 时
          with
          [
              _OutIt=std::ostreambuf_iterator<wchar_t,std::char_traits<wchar_t>>,
              _Elem=wchar_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(161): warning C4820: “std::basic_ostream<char,std::char_traits<char>>::sentry”:“7”字节填充添加在 数据成员“std::basic_ostream<char,std::char_traits<char>>::sentry::_Ok”后
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(443): note: 参见对正在编译的 类 模板 实例化 "std::basic_ostream<char,std::char_traits<char>>::sentry" 的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(441): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(double)" 时
  J:\opencv4.0.1\opencv\build\include\opencv2/core/utility.hpp(429): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(double)”的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(687): note: 参见对正在编译的 类 模板 实例化 "std::basic_ostream<char,std::char_traits<char>>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(453): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(413): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(401): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned __int64)" 时
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(110): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned __int64)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(393): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(381): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(__int64)" 时
  J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.inl.hpp(307): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(__int64)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(333): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(321): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned int)" 时
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(116): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(unsigned int)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(313): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(296): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(int)" 时
  J:\opencv4.0.1\opencv\build\include\opencv2/core/cvstd.inl.hpp(182): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(int)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(401): warning C4820: “std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”:“6”字节填充添加在 数据成员“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>::_Isnil”后
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(59): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>" 的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(58): note: 编译 类 模板 成员函数 "std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0> &std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>::operator ++(void)" 时
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(240): note: 参见对正在编译的函数 模板 实例化“std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0> &std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>::operator ++(void)”的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(196): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>" 的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(460): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>" 的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(401): warning C4820: “std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”:“6”字节填充添加在 数据成员“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>::_Isnil”后
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(59): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(58): note: 编译 类 模板 成员函数 "std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0> &std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>::operator ++(void)" 时
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(240): note: 参见对正在编译的函数 模板 实例化“std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0> &std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>::operator ++(void)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(196): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_unchecked_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>,std::_Iterator_base0>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(84): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(401): warning C4820: “std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”:“6”字节填充添加在 数据成员“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>::_Isnil”后
          with
          [
              _Ty=std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>,
              _Alloc=std::allocator<std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(225): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>,
              _Alloc=std::allocator<std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(218): note: 编译 类 模板 成员函数 "const std::pair<const _Kty,_Ty> &std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>::operator *(void) const" 时
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(230): note: 参见对正在编译的函数 模板 实例化“const std::pair<const _Kty,_Ty> &std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const _Kty,_Ty>>>>::operator *(void) const”的引用
          with
          [
              _Kty=cv::String,
              _Ty=cv::dnn::dnn4_v20181221::DictValue
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(309): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.inl.hpp(335): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>" 的引用
          with
          [
              _Ty=std::pair<const cv::String,cv::dnn::dnn4_v20181221::DictValue>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(376): warning C4820: “std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”:“4”字节填充添加在 数据成员“std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>::_Myval”后
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(605): note: 参见对正在编译的 类 模板 实例化 "std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>" 的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(604): note: 编译 类 模板 成员函数 "void std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>::_Freeheadnode(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *)" 时
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(480): note: 参见对正在编译的函数 模板 实例化“void std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>::_Freeheadnode(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(689): note: 参见对正在编译的 类 模板 实例化 "std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>" 的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(740): note: 参见对正在编译的 类 模板 实例化 "std::_List_buy<_Ty,_Alloc>" 的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\stitching\detail\util.hpp(89): note: 参见对正在编译的 类 模板 实例化 "std::list<cv::detail::GraphEdge,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(376): warning C4623: “std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer>”: 已将默认构造函数隐式定义为“已删除”
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(181): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(176): note: 编译 类 模板 成员函数 "void std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)" 时
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(139): note: 参见对正在编译的函数 模板 实例化“void std::basic_ostream<char,std::char_traits<char>>::_Osfx(void)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(622): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(609): note: 编译 类 模板 成员函数 "std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>::_Buynode0(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *)" 时
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(600): note: 参见对正在编译的函数 模板 实例化“std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_alloc<std::_List_base_types<_Ty,_Alloc>>::_Buynode0(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(935): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(927): note: 编译 类 模板 成员函数 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buyheadnode(void)" 时
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,
              _Traits=std::_Tmap_traits<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<cvflann::lsh::BucketKey>,std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(808): note: 参见对正在编译的函数 模板 实例化“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buyheadnode(void)”的引用
          with
          [
              _Ty=std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,
              _Traits=std::_Tmap_traits<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<cvflann::lsh::BucketKey>,std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1032): note: 参见对正在编译的 类 模板 实例化 "std::_Tree_comp_alloc<_Traits>" 的引用
          with
          [
              _Traits=std::_Tmap_traits<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<cvflann::lsh::BucketKey>,std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(82): note: 参见对正在编译的 类 模板 实例化 "std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,false>>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket,
              _Pr=std::less<cvflann::lsh::BucketKey>,
              _Alloc=std::allocator<std::pair<const cvflann::lsh::BucketKey,cvflann::lsh::Bucket>>
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(322): note: 参见对正在编译的 类 模板 实例化 "std::map<cvflann::lsh::BucketKey,cvflann::lsh::Bucket,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>" 的引用
          with
          [
              _Kty=cvflann::lsh::BucketKey,
              _Ty=cvflann::lsh::Bucket
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\lsh_table.h(343): note: 参见对正在编译的 类 模板 实例化 "cvflann::lsh::LshTable<ElementType>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(530): warning C4774: “_scprintf”: 参数 1 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(530): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(530): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(583): note: 参见对正在编译的函数 模板 实例化“std::string std::_Floating_to_string<float>(const char *,_Ty)”的引用
          with
          [
              _Ty=float
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(532): warning C4774: “sprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(532): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(532): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(542): warning C4774: “_scwprintf”: 参数 1 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(542): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(542): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(629): note: 参见对正在编译的函数 模板 实例化“std::wstring std::_Floating_to_wstring<float>(const wchar_t *,_Ty)”的引用
          with
          [
              _Ty=float
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(544): warning C4774: “swprintf_s”: 参数 3 中应存在的格式字符串不为字符串字面量
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(544): note: 例如，将 printf(name); 换用为 printf("%s", name);，因为“名称”中的格式说明符可能造成安全问题
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(544): note: 请考虑对已命名的字符串字面量使用 constexpr 说明符
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(826): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  J:\opencv4.0.1\opencv\build\include\opencv2/core/cvstd.inl.hpp(79): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::operator <<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,const char *)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(974): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(922): note: 参见对正在编译的函数 模板 实例化“box *std::vector<box,std::allocator<_Ty>>::_Emplace_reallocate<const _Ty&>(box *const ,const _Ty &)”的引用
          with
          [
              _Ty=box
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(922): note: 参见对正在编译的函数 模板 实例化“box *std::vector<box,std::allocator<_Ty>>::_Emplace_reallocate<const _Ty&>(box *const ,const _Ty &)”的引用
          with
          [
              _Ty=box
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(932): note: 参见对正在编译的函数 模板 实例化“void std::vector<box,std::allocator<_Ty>>::emplace_back<const _Ty&>(const _Ty &)”的引用
          with
          [
              _Ty=box
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(931): note: 编译 类 模板 成员函数 "void std::vector<box,std::allocator<_Ty>>::push_back(const _Ty &)" 时
          with
          [
              _Ty=box
          ]
  D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(178): note: 参见对正在编译的函数 模板 实例化“void std::vector<box,std::allocator<_Ty>>::push_back(const _Ty &)”的引用
          with
          [
              _Ty=box
          ]
  d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\FaceDetector.h(91): note: 参见对正在编译的 类 模板 实例化 "std::vector<box,std::allocator<_Ty>>" 的引用
          with
          [
              _Ty=box
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(1448): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(1482): note: 参见对正在编译的函数 模板 实例化“void std::vector<size_t,std::allocator<_Ty>>::_Resize<std::vector<_Ty,std::allocator<_Ty>>::resize::<lambda_a46a035c1a65e960d545ef2debaf34ef>>(const unsigned __int64,_Lambda)”的引用
          with
          [
              _Ty=size_t,
              _Lambda=std::vector<size_t,std::allocator<size_t>>::resize::<lambda_a46a035c1a65e960d545ef2debaf34ef>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(1482): note: 参见对正在编译的函数 模板 实例化“void std::vector<size_t,std::allocator<_Ty>>::_Resize<std::vector<_Ty,std::allocator<_Ty>>::resize::<lambda_a46a035c1a65e960d545ef2debaf34ef>>(const unsigned __int64,_Lambda)”的引用
          with
          [
              _Ty=size_t,
              _Lambda=std::vector<size_t,std::allocator<size_t>>::resize::<lambda_a46a035c1a65e960d545ef2debaf34ef>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(1476): note: 编译 类 模板 成员函数 "void std::vector<size_t,std::allocator<_Ty>>::resize(const unsigned __int64)" 时
          with
          [
              _Ty=size_t
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\dynamic_bitset.h(122): note: 参见对正在编译的函数 模板 实例化“void std::vector<size_t,std::allocator<_Ty>>::resize(const unsigned __int64)”的引用
          with
          [
              _Ty=size_t
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(709): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(729): note: 参见对正在编译的函数 模板 实例化“void std::vector<int,std::allocator<_Ty>>::_Range_construct_or_tidy<const _Elem*>(_Iter,_Iter,std::forward_iterator_tag)”的引用
          with
          [
              _Ty=int,
              _Elem=int,
              _Iter=const int *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(729): note: 参见对正在编译的函数 模板 实例化“void std::vector<int,std::allocator<_Ty>>::_Range_construct_or_tidy<const _Elem*>(_Iter,_Iter,std::forward_iterator_tag)”的引用
          with
          [
              _Ty=int,
              _Elem=int,
              _Iter=const int *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\vector(726): note: 编译 类 模板 成员函数 "std::vector<int,std::allocator<_Ty>>::vector(std::initializer_list<_Ty>,const _Alloc &)" 时
          with
          [
              _Ty=int,
              _Alloc=std::allocator<int>
          ]
  D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp(154): note: 参见对正在编译的函数 模板 实例化“std::vector<int,std::allocator<_Ty>>::vector(std::initializer_list<_Ty>,const _Alloc &)”的引用
          with
          [
              _Ty=int,
              _Alloc=std::allocator<int>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(558): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(546): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::put(_Elem)" 时
          with
          [
              _Elem=char
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(1020): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::put(_Elem)”的引用
          with
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(212): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(200): note: 编译 类 模板 成员函数 "void std::numpunct<wchar_t>::_Init(const std::_Locinfo &,bool)" 时
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(160): note: 参见对正在编译的函数 模板 实例化“void std::numpunct<wchar_t>::_Init(const std::_Locinfo &,bool)”的引用
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocnum(1854): note: 参见对正在编译的 类 模板 实例化 "std::numpunct<wchar_t>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(161): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(149): note: 编译 类 模板 成员函数 "void std::_Mpunct<_Elem>::_Init(const std::_Locinfo &,bool)" 时
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(103): note: 参见对正在编译的函数 模板 实例化“void std::_Mpunct<_Elem>::_Init(const std::_Locinfo &,bool)”的引用
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(276): note: 参见对正在编译的 类 模板 实例化 "std::_Mpunct<_Elem>" 的引用
          with
          [
              _Elem=wchar_t
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xlocmon(1030): note: 参见对正在编译的 类 模板 实例化 "std::moneypunct<wchar_t,true>" 的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xstring_insert.h(58): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\string(174): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::_Insert_string<char,std::char_traits<char>,unsigned __int64>(std::basic_ostream<char,std::char_traits<char>> &,const _Elem *const ,const _SizeT)”的引用
          with
          [
              _Elem=char,
              _SizeT=unsigned __int64
          ]
  J:\opencv4.0.1\opencv\build\include\opencv2/dnn/dnn.inl.hpp(319): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::operator <<<char,std::char_traits<char>,std::allocator<char>>(std::basic_ostream<char,std::char_traits<char>> &,const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(271): warning C4625: “std::_Tuple_val<_This>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _This=std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(845): note: 参见对正在编译的 类 模板 实例化 "std::_Tuple_val<_This>" 的引用
          with
          [
              _This=std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(232): note: 参见对正在编译的 类 模板 实例化 "std::tuple<_Ty &&>" 的引用
          with
          [
              _Ty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(264): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,>(_Keyty &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Keyty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(263): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,>(_Keyty &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Keyty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(199): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(199): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::try_emplace<>(std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(198): note: 编译 类 模板 成员函数 "cvflann::any &std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)" 时
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\params.h(49): note: 参见对正在编译的函数 模板 实例化“cvflann::any &std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<std::pair<const _Kty,_Ty>>>::operator [](std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&)”的引用
          with
          [
              _Kty=cv::String,
              _Ty=cvflann::any
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(271): warning C4626: “std::_Tuple_val<_This>”: 已将对齐运算符隐式定义为“已删除”
          with
          [
              _This=std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(271): warning C5027: “std::_Tuple_val<_This>”: 已将移动赋值运算符隐式定义为“已删除”
          with
          [
              _This=std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\tuple(846): warning C4625: “std::tuple<_Ty &&>”: 已将复制构造函数隐式定义为“已删除”
          with
          [
              _Ty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(2903): warning C4365: “=”: 从“const _Ty”转换到“unsigned __int64”，有符号/无符号不匹配
          with
          [
              _Ty=int
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(2917): note: 参见对正在编译的函数 模板 实例化“void std::_Fill_unchecked1<_FwdIt,_Ty>(_FwdIt,_FwdIt,const _Ty &,std::false_type)”的引用
          with
          [
              _FwdIt=unsigned __int64 *,
              _Ty=int
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(2925): note: 参见对正在编译的函数 模板 实例化“void std::_Fill_unchecked<unsigned __int64*,_Ty>(_FwdIt,_FwdIt,const _Ty &)”的引用
          with
          [
              _Ty=int,
              _FwdIt=unsigned __int64 *
          ]
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\dynamic_bitset.h(79): note: 参见对正在编译的函数 模板 实例化“void std::fill<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>,int>(_FwdIt,_FwdIt,const int &)”的引用
          with
          [
              _Ty=size_t,
              _FwdIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<size_t>>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1193): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1000): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::assign<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1000): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::assign<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(986): note: 编译 类 模板 成员函数 "std::list<cv::detail::GraphEdge,std::allocator<_Ty>> &std::list<_Ty,std::allocator<_Ty>>::operator =(const std::list<_Ty,std::allocator<_Ty>> &)" 时
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xutility(2903): note: 参见对正在编译的函数 模板 实例化“std::list<cv::detail::GraphEdge,std::allocator<_Ty>> &std::list<_Ty,std::allocator<_Ty>>::operator =(const std::list<_Ty,std::allocator<_Ty>> &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(433): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(421): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(float)" 时
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(float)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(234): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\ostream(222): note: 编译 类 模板 成员函数 "std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(bool)" 时
  j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): note: 参见对正在编译的函数 模板 实例化“std::basic_ostream<char,std::char_traits<char>> &std::basic_ostream<char,std::char_traits<char>>::operator <<(bool)”的引用
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(985): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1162): note: 参见对正在编译的函数 模板 实例化“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&> &&,std::tuple<> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Traits=std::_Tmap_traits<cv::String,cvflann::any,std::less<cv::String>,std::allocator<std::pair<const cv::String,cvflann::any>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1162): note: 参见对正在编译的函数 模板 实例化“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<const std::piecewise_construct_t&,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&>,std::tuple<>>(const std::piecewise_construct_t &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&> &&,std::tuple<> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Traits=std::_Tmap_traits<cv::String,cvflann::any,std::less<cv::String>,std::allocator<std::pair<const cv::String,cvflann::any>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(232): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&> &&,std::tuple<> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(232): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::emplace_hint<const std::piecewise_construct_t&,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&>,std::tuple<>>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,const std::piecewise_construct_t &,std::tuple<std::basic_string<char,std::char_traits<char>,std::allocator<char>> &&> &&,std::tuple<> &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(264): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,>(_Keyty &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Keyty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\map(263): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<cv::String,cvflann::any,std::less<_Kty>,std::allocator<_Ty>>::_Try_emplace<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,>(_Keyty &&)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Keyty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1720): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1163): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_hint<_Value_type&,std::_Tree_node<_Value_type,std::_Default_allocator_traits<_Alloc>::void_pointer>*>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Valty=std::pair<const cv::String,cvflann::any> &,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1163): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_hint<_Value_type&,std::_Tree_node<_Value_type,std::_Default_allocator_traits<_Alloc>::void_pointer>*>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Valty=std::pair<const cv::String,cvflann::any> &,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1209): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1190): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Reusenode<const cv::detail::GraphEdge&>(std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_TArg)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _TArg=const cv::detail::GraphEdge &
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1190): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Reusenode<const cv::detail::GraphEdge&>(std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_TArg)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _TArg=const cv::detail::GraphEdge &
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1000): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::assign<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1000): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::assign<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(801): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(796): note: 编译 类 模板 成员函数 "std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::list(const std::list<_Ty,std::allocator<_Ty>> &)" 时
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xmemory0(881): note: 参见对正在编译的函数 模板 实例化“std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::list(const std::list<_Ty,std::allocator<_Ty>> &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(961): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(951): note: 编译 类 模板 成员函数 "std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode0(void)" 时
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Traits=std::_Tmap_traits<cv::String,cvflann::any,std::less<cv::String>,std::allocator<std::pair<const cv::String,cvflann::any>>,false>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(977): note: 参见对正在编译的函数 模板 实例化“std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode0(void)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Traits=std::_Tmap_traits<cv::String,cvflann::any,std::less<cv::String>,std::allocator<std::pair<const cv::String,cvflann::any>>,false>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1796): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1726): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_nohint<_Value_type&,_Nodety>(bool,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *,
              _Valty=std::pair<const cv::String,cvflann::any> &
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1725): note: 参见对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_nohint<_Value_type&,_Nodety>(bool,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *,
              _Valty=std::pair<const cv::String,cvflann::any> &
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1163): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_hint<_Value_type&,std::_Tree_node<_Value_type,std::_Default_allocator_traits<_Alloc>::void_pointer>*>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Valty=std::pair<const cv::String,cvflann::any> &,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xtree(1163): note: 参见对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>> std::_Tree<std::_Tmap_traits<_Kty,cvflann::any,_Pr,_Alloc,false>>::_Insert_hint<_Value_type&,std::_Tree_node<_Value_type,std::_Default_allocator_traits<_Alloc>::void_pointer>*>(std::_Tree_const_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,_Valty,_Nodety)”的引用
          with
          [
              _Ty=std::pair<const cv::String,cvflann::any>,
              _Kty=cv::String,
              _Pr=std::less<cv::String>,
              _Alloc=std::allocator<std::pair<const cv::String,cvflann::any>>,
              _Value_type=std::pair<const cv::String,cvflann::any>,
              _Valty=std::pair<const cv::String,cvflann::any> &,
              _Nodety=std::_Tree_node<std::pair<const cv::String,cvflann::any>,std::_Default_allocator_traits<std::allocator<std::pair<const cv::String,cvflann::any>>>::void_pointer> *
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(719): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(950): note: 参见对正在编译的函数 模板 实例化“std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_buy<_Ty,_Alloc>::_Buynode<const cv::detail::GraphEdge&>(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,const cv::detail::GraphEdge &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(950): note: 参见对正在编译的函数 模板 实例化“std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_List_buy<_Ty,_Alloc>::_Buynode<const cv::detail::GraphEdge&>(std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,std::_List_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *,const cv::detail::GraphEdge &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Alloc=std::allocator<cv::detail::GraphEdge>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1192): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Insert<const cv::detail::GraphEdge&>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>,std::_Iterator_base0>,const cv::detail::GraphEdge &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1192): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Insert<const cv::detail::GraphEdge&>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>,std::_Iterator_base0>,const cv::detail::GraphEdge &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1311): warning C4571: 信息: 自 Visual C++ 7.1 之后，catch(...) 语义发生了变化；不再捕获结构化的异常(SEH)
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1265): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Insert_range<_Iter>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>,std::_Iterator_base0>,_Iter,_Iter,std::forward_iterator_tag)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(1264): note: 参见对正在编译的函数 模板 实例化“void std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::_Insert_range<_Iter>(std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>,std::_Iterator_base0>,_Iter,_Iter,std::forward_iterator_tag)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(800): note: 参见对正在编译的函数 模板 实例化“std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>> std::list<_Ty,std::allocator<_Ty>>::insert<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(800): note: 参见对正在编译的函数 模板 实例化“std::_List_iterator<std::_List_val<std::_List_simple_types<_Ty>>> std::list<_Ty,std::allocator<_Ty>>::insert<std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,void>(std::_List_const_iterator<std::_List_val<std::_List_simple_types<_Ty>>>,_Iter,_Iter)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge,
              _Iter=std::_List_const_iterator<std::_List_val<std::_List_simple_types<cv::detail::GraphEdge>>>
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\list(796): note: 编译 类 模板 成员函数 "std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::list(const std::list<_Ty,std::allocator<_Ty>> &)" 时
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
  C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Tools\MSVC\14.16.27023\include\xmemory0(881): note: 参见对正在编译的函数 模板 实例化“std::list<cv::detail::GraphEdge,std::allocator<_Ty>>::list(const std::list<_Ty,std::allocator<_Ty>> &)”的引用
          with
          [
              _Ty=cv::detail::GraphEdge
          ]
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_wstdio.h(1530): warning C4710: “int swprintf_s(wchar_t *const ,const size_t,const wchar_t *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_wstdio.h(1530): note: 参见“swprintf_s”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_wstdio.h(1761): warning C4710: “int _scwprintf(const wchar_t *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\corecrt_wstdio.h(1761): note: 参见“_scwprintf”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(828): warning C4710: “int fprintf(FILE *const ,const char *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(828): note: 参见“fprintf”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(948): warning C4710: “int printf(const char *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(948): note: 参见“printf”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(1833): warning C4710: “int sprintf_s(char *const ,const size_t,const char *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(1833): note: 参见“sprintf_s”的声明
C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(2100): warning C4710: “int _scprintf(const char *const ,...)”: 函数未内联
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\ucrt\stdio.h(2100): note: 参见“_scprintf”的声明
  正在生成代码...
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(105): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(110): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(bool) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(float) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(unsigned int) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int) __ptr64”: 函数未内联
c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(643): warning C4710: “__local_stdio_printf_options”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(139): warning C4710: “void __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Osfx(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(123): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::flush(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(217): warning C4710: “struct _Cvtvec __cdecl std::_Locinfo::_Getcvt(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(221): warning C4710: “unsigned short const * __ptr64 __cdecl std::_Locinfo::_W_Getdays(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(222): warning C4710: “unsigned short const * __ptr64 __cdecl std::_Locinfo::_W_Getmonths(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(227): warning C4710: “char const * __ptr64 __cdecl std::_Locinfo::_Getdays(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(228): warning C4710: “char const * __ptr64 __cdecl std::_Locinfo::_Getmonths(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(221): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(222): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(227): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocstr<wchar_t>(char const * __ptr64,wchar_t * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(228): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocstr<wchar_t>(char const * __ptr64,wchar_t * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(229): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocstr<wchar_t>(char const * __ptr64,wchar_t * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(217): warning C4710: “struct _Cvtvec __cdecl std::_Locinfo::_Getcvt(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(221): warning C4710: “unsigned short const * __ptr64 __cdecl std::_Locinfo::_W_Getdays(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(222): warning C4710: “unsigned short const * __ptr64 __cdecl std::_Locinfo::_W_Getmonths(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(227): warning C4710: “char const * __ptr64 __cdecl std::_Locinfo::_Getdays(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(228): warning C4710: “char const * __ptr64 __cdecl std::_Locinfo::_Getmonths(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(221): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(222): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(227): warning C4710: “char * __ptr64 __cdecl std::_Maklocstr<char>(char const * __ptr64,char * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(228): warning C4710: “char * __ptr64 __cdecl std::_Maklocstr<char>(char const * __ptr64,char * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\ncnn\include\ncnn\mat.h(465): warning C4710: “void __cdecl ncnn::Mat::release(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(806): warning C4710: “int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::sputc(char) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(814): warning C4710: “__int64 __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::sputn(char const * __ptr64,__int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(819): warning C4710: “int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::sputc(char) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(826): warning C4710: “void __cdecl std::basic_ios<char,struct std::char_traits<char> >::setstate(int,bool) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(829): warning C4710: “void __cdecl std::basic_ios<char,struct std::char_traits<char> >::setstate(int,bool) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64)”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(36): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64)”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(115): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(3012): warning C4710: “void __cdecl std::_Pop_heap_hole_by_index<struct bbox * __ptr64,struct bbox,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,__int64,__int64,struct bbox && __ptr64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(1884): warning C4710: “static void __cdecl std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::_Xlength(void)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(1884): warning C4710: “static void __cdecl std::vector<float,class std::allocator<float> >::_Xlength(void)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(1884): warning C4710: “static void __cdecl std::vector<int,class std::allocator<int> >::_Xlength(void)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(1887): warning C4710: “int * __ptr64 __cdecl std::allocator<int>::allocate(unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\deque(1822): warning C4710: “void __cdecl std::deque<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::allocator<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::_Xlen(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(1752): warning C4710: “static void __cdecl std::vector<struct bbox,class std::allocator<struct bbox> >::_Xrange(void)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring(3891): warning C4710: “static void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(3884): warning C4710: “void __cdecl std::_Med3_unchecked<struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,struct bbox * __ptr64,struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(3885): warning C4710: “void __cdecl std::_Med3_unchecked<struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,struct bbox * __ptr64,struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(3886): warning C4710: “void __cdecl std::_Med3_unchecked<struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,struct bbox * __ptr64,struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(3887): warning C4710: “void __cdecl std::_Med3_unchecked<struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,struct bbox * __ptr64,struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(3891): warning C4710: “void __cdecl std::_Med3_unchecked<struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,struct bbox * __ptr64,struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\FaceDetector.cpp : warning C4710: “__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\deque(1487): warning C4710: “void __cdecl std::deque<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::allocator<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::_Growmap(unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(1353): warning C4710: “static void __cdecl std::vector<int,class std::allocator<int> >::_Xlength(void)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(1361): warning C4710: “void __cdecl std::allocator<int>::deallocate(int * __ptr64 const,unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(710): warning C4710: “void __cdecl std::vector<int,class std::allocator<int> >::_Tidy(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(740): warning C4710: “void __cdecl std::vector<int,class std::allocator<int> >::_Tidy(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(667): warning C4710: “void __cdecl std::vector<float,class std::allocator<float> >::_Tidy(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(950): warning C4710: “static void __cdecl std::vector<int,class std::allocator<int> >::_Xlength(void)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(975): warning C4710: “void __cdecl std::vector<int,class std::allocator<int> >::_Destroy(int * __ptr64,int * __ptr64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(976): warning C4710: “void __cdecl std::allocator<int>::deallocate(int * __ptr64 const,unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(956): warning C4710: “int * __ptr64 __cdecl std::allocator<int>::allocate(unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(980): warning C4710: “void __cdecl std::vector<int,class std::allocator<int> >::_Change_array(int * __ptr64 const,unsigned __int64,unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(950): warning C4710: “static void __cdecl std::vector<struct bbox,class std::allocator<struct bbox> >::_Xlength(void)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(975): warning C4710: “void __cdecl std::vector<struct bbox,class std::allocator<struct bbox> >::_Destroy(struct bbox * __ptr64,struct bbox * __ptr64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(976): warning C4710: “void __cdecl std::allocator<struct bbox>::deallocate(struct bbox * __ptr64 const,unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(950): warning C4710: “static void __cdecl std::vector<struct box,class std::allocator<struct box> >::_Xlength(void)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(975): warning C4710: “void __cdecl std::vector<struct box,class std::allocator<struct box> >::_Destroy(struct box * __ptr64,struct box * __ptr64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(976): warning C4710: “void __cdecl std::allocator<struct box>::deallocate(struct box * __ptr64 const,unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\deque(1193): warning C4710: “void __cdecl std::deque<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::allocator<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::_Tidy(void) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(91): warning C4710: “__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(87): warning C4710: “__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring(2474): warning C4710: “void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy_deallocate(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring(2481): warning C4710: “class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const * __ptr64 const,unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring(2676): warning C4710: “class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const * __ptr64 const,unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(729): warning C4710: “void __cdecl std::vector<int,class std::allocator<int> >::_Range_construct_or_tidy<int const * __ptr64>(int const * __ptr64,int const * __ptr64,struct std::forward_iterator_tag) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(922): warning C4710: “int * __ptr64 __cdecl std::vector<int,class std::allocator<int> >::_Emplace_reallocate<int>(int * __ptr64 const,int && __ptr64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(922): warning C4710: “struct bbox * __ptr64 __cdecl std::vector<struct bbox,class std::allocator<struct bbox> >::_Emplace_reallocate<struct bbox const & __ptr64>(struct bbox * __ptr64 const,struct bbox const & __ptr64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(922): warning C4710: “struct box * __ptr64 __cdecl std::vector<struct box,class std::allocator<struct box> >::_Emplace_reallocate<struct box const & __ptr64>(struct box * __ptr64 const,struct box const & __ptr64) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(189): warning C4710: “__cdecl std::vector<float,class std::allocator<float> >::vector<float,class std::allocator<float> >(unsigned __int64,class std::allocator<float> const & __ptr64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(4006): warning C4710: “void __cdecl std::_Sort_unchecked<struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,struct bbox * __ptr64,__int64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(4011): warning C4710: “void __cdecl std::_Sort_unchecked<struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,struct bbox * __ptr64,__int64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(4000): warning C4710: “struct std::pair<struct bbox * __ptr64,struct bbox * __ptr64> __cdecl std::_Partition_by_median_guess_unchecked<struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(1407): warning C4710: “void __cdecl std::vector<int,class std::allocator<int> >::_Tidy(void) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.h(31): warning C4710: “printf”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\algorithm(4034): warning C4710: “void __cdecl std::_Sort_unchecked<struct bbox * __ptr64,bool (__cdecl*)(struct bbox,struct bbox)>(struct bbox * __ptr64,struct bbox * __ptr64,__int64,bool (__cdecl*)(struct bbox,struct bbox))”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xmemory(158): warning C4710: “void __cdecl std::_Destroy_range<class std::allocator<class std::vector<int,class std::allocator<int> > > >(class std::vector<int,class std::allocator<int> > * __ptr64,class std::vector<int,class std::allocator<int> > * __ptr64,class std::allocator<class std::vector<int,class std::allocator<int> > > & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(1849): warning C4710: “void __cdecl std::_Destroy_range<class std::allocator<class std::vector<int,class std::allocator<int> > > >(class std::vector<int,class std::allocator<int> > * __ptr64,class std::vector<int,class std::allocator<int> > * __ptr64,class std::allocator<class std::vector<int,class std::allocator<int> > > & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(894): warning C4710: “void __cdecl std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::_Tidy(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\vector(667): warning C4710: “void __cdecl std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::_Tidy(void) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(116): warning C4710: “printf”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(44): warning C4710: “void __cdecl Timer::tic(void) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(47): warning C4710: “double __cdecl Timer::toc(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(48): warning C4710: “void __cdecl Timer::tic(void) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(64): warning C4710: “double __cdecl Timer::toc(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(67): warning C4711: 为自动内联扩展选定了函数“__cdecl ncnn::Mat::operator<float> float * __ptr64(void) __ptr64”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(68): warning C4711: 为自动内联扩展选定了函数“__cdecl ncnn::Mat::operator<float> float * __ptr64(void) __ptr64”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(69): warning C4711: 为自动内联扩展选定了函数“__cdecl ncnn::Mat::operator<float> float * __ptr64(void) __ptr64”
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(148): warning C4710: “__cdecl std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >(unsigned __int64,class std::allocator<class std::vector<int,class std::allocator<int> > > const & __ptr64) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(148): warning C4710: “__cdecl std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > >(unsigned __int64,class std::allocator<class std::vector<int,class std::allocator<int> > > const & __ptr64) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(166): warning C4710: “__cdecl std::vector<int,class std::allocator<int> >::vector<int,class std::allocator<int> >(class std::vector<int,class std::allocator<int> > const & __ptr64) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(155): warning C4710: “class std::vector<int,class std::allocator<int> > & __ptr64 __cdecl std::vector<int,class std::allocator<int> >::operator=(class std::vector<int,class std::allocator<int> > const & __ptr64) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(157): warning C4710: “class std::vector<int,class std::allocator<int> > & __ptr64 __cdecl std::vector<int,class std::allocator<int> >::operator=(class std::vector<int,class std::allocator<int> > const & __ptr64) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(159): warning C4710: “class std::vector<int,class std::allocator<int> > & __ptr64 __cdecl std::vector<int,class std::allocator<int> >::operator=(class std::vector<int,class std::allocator<int> > const & __ptr64) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(161): warning C4710: “class std::vector<int,class std::allocator<int> > & __ptr64 __cdecl std::vector<int,class std::allocator<int> >::operator=(class std::vector<int,class std::allocator<int> > const & __ptr64) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(36): warning C4710: “void __cdecl Timer::tic(void) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(38): warning C4710: “double __cdecl Timer::toc(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >,bool) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.cpp(27): warning C4711: 为自动内联扩展选定了函数“void __cdecl Detector::Init(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64”
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(105): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(110): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(1020): warning C4710: “char __cdecl std::basic_ios<char,struct std::char_traits<char> >::widen(char)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(1020): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::put(char) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(1021): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::flush(void) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(bool) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(float) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(unsigned int) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int) __ptr64”: 函数未内联
c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(643): warning C4710: “__local_stdio_printf_options”: 函数未内联
c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h(1390): warning C4710: “__local_stdio_printf_options”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\core\mat.inl.hpp(737): warning C4710: “void __cdecl cv::Mat::release(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(139): warning C4710: “void __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Osfx(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(123): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::flush(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(217): warning C4710: “struct _Cvtvec __cdecl std::_Locinfo::_Getcvt(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(217): warning C4710: “struct _Cvtvec __cdecl std::_Locinfo::_Getcvt(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(221): warning C4710: “unsigned short const * __ptr64 __cdecl std::_Locinfo::_W_Getdays(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(221): warning C4710: “unsigned short const * __ptr64 __cdecl std::_Locinfo::_W_Getdays(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(222): warning C4710: “unsigned short const * __ptr64 __cdecl std::_Locinfo::_W_Getmonths(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(222): warning C4710: “unsigned short const * __ptr64 __cdecl std::_Locinfo::_W_Getmonths(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(227): warning C4710: “char const * __ptr64 __cdecl std::_Locinfo::_Getdays(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(227): warning C4710: “char const * __ptr64 __cdecl std::_Locinfo::_Getdays(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(228): warning C4710: “char const * __ptr64 __cdecl std::_Locinfo::_Getmonths(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(228): warning C4710: “char const * __ptr64 __cdecl std::_Locinfo::_Getmonths(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(221): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(221): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(222): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(222): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocwcs(wchar_t const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(227): warning C4710: “char * __ptr64 __cdecl std::_Maklocstr<char>(char const * __ptr64,char * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(227): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocstr<wchar_t>(char const * __ptr64,wchar_t * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(228): warning C4710: “char * __ptr64 __cdecl std::_Maklocstr<char>(char const * __ptr64,char * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(228): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocstr<wchar_t>(char const * __ptr64,wchar_t * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xloctime(229): warning C4710: “wchar_t * __ptr64 __cdecl std::_Maklocstr<wchar_t>(char const * __ptr64,wchar_t * __ptr64,struct _Cvtvec const & __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(806): warning C4710: “int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::sputc(char) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(814): warning C4710: “__int64 __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::sputn(char const * __ptr64,__int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(819): warning C4710: “int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::sputc(char) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(826): warning C4710: “void __cdecl std::basic_ios<char,struct std::char_traits<char> >::setstate(int,bool) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\ostream(829): warning C4710: “void __cdecl std::basic_ios<char,struct std::char_traits<char> >::setstate(int,bool) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(74): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64)”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(36): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64)”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(115): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64)”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\deque(1822): warning C4710: “void __cdecl std::deque<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::allocator<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::_Xlen(void)const __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring(3891): warning C4710: “static void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Xlen(void)”: 函数未内联
D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\main.cpp : warning C4710: “__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\deque(1193): warning C4710: “void __cdecl std::deque<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::allocator<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::_Tidy(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\deque(1487): warning C4710: “void __cdecl std::deque<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > >,class std::allocator<class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > > >::_Growmap(unsigned __int64) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(91): warning C4710: “__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64”: 函数未内联
j:\opencv4.0.1\opencv\build\include\opencv2\flann\any.h(87): warning C4710: “__cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const & __ptr64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring(2676): warning C4710: “class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const * __ptr64 const,unsigned __int64) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring(2474): warning C4710: “void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy_deallocate(void) __ptr64”: 函数未内联
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\xstring(2481): warning C4710: “class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __ptr64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign(char const * __ptr64 const,unsigned __int64) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\facedetector.h(31): warning C4710: “printf”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\main.cpp(26): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64,char const * __ptr64)”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\main.cpp(26): warning C4710: “class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64 (__cdecl*)(class std::basic_ostream<char,struct std::char_traits<char> > & __ptr64)) __ptr64”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\main.cpp(49): warning C4710: “fprintf”: 函数未内联
d:\project\face\face-detector-1mb-with-landmark\face_detector_ncnn\main.cpp(64): warning C4710: “sprintf”: 函数未内联
  FaceDetector.vcxproj -> D:\project\face\Face-Detector-1MB-with-landmark\Face_Detector_ncnn\build\Release\FaceDetector.exe
